{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 91
        },
        "id": "zvaSyzCjP1_X",
        "outputId": "d7404e1a-f833-4e56-c8f5-14b1f581da0a"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-ab655119-4249-4a66-8d96-b5676be8bd81\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-ab655119-4249-4a66-8d96-b5676be8bd81\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving Titanic_train.csv to Titanic_train.csv\n",
            "User uploaded file \"Titanic_train.csv\" with length 61194 bytes\n"
          ]
        }
      ],
      "source": [
        "# prompt: hey colab uplouad  data file\n",
        "\n",
        "from google.colab import files\n",
        "\n",
        "uploaded = files.upload()\n",
        "\n",
        "for fn in uploaded.keys():\n",
        "  print('User uploaded file \"{name}\" with length {length} bytes'.format(\n",
        "      name=fn, length=len(uploaded[fn])))\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "df=pd.read_csv(\"Titanic_train.csv\")\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 275
        },
        "id": "L45Ei9OgRURf",
        "outputId": "33738598-4981-43b4-9b12-e8c3995222c5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   PassengerId  Survived  Pclass  \\\n",
              "0            1         0       3   \n",
              "1            2         1       1   \n",
              "2            3         1       3   \n",
              "3            4         1       1   \n",
              "4            5         0       3   \n",
              "\n",
              "                                                Name     Sex   Age  SibSp  \\\n",
              "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
              "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
              "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
              "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
              "4                           Allen, Mr. William Henry    male  35.0      0   \n",
              "\n",
              "   Parch            Ticket     Fare Cabin Embarked  \n",
              "0      0         A/5 21171   7.2500   NaN        S  \n",
              "1      0          PC 17599  71.2833   C85        C  \n",
              "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
              "3      0            113803  53.1000  C123        S  \n",
              "4      0            373450   8.0500   NaN        S  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f30e3fa5-de30-4ea4-a15e-cc02fac8facb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Age</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Parch</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Braund, Mr. Owen Harris</td>\n",
              "      <td>male</td>\n",
              "      <td>22.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>A/5 21171</td>\n",
              "      <td>7.2500</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
              "      <td>female</td>\n",
              "      <td>38.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>PC 17599</td>\n",
              "      <td>71.2833</td>\n",
              "      <td>C85</td>\n",
              "      <td>C</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Heikkinen, Miss. Laina</td>\n",
              "      <td>female</td>\n",
              "      <td>26.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>STON/O2. 3101282</td>\n",
              "      <td>7.9250</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
              "      <td>female</td>\n",
              "      <td>35.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>113803</td>\n",
              "      <td>53.1000</td>\n",
              "      <td>C123</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>Allen, Mr. William Henry</td>\n",
              "      <td>male</td>\n",
              "      <td>35.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>373450</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>NaN</td>\n",
              "      <td>S</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f30e3fa5-de30-4ea4-a15e-cc02fac8facb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f30e3fa5-de30-4ea4-a15e-cc02fac8facb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f30e3fa5-de30-4ea4-a15e-cc02fac8facb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-deec2604-80fa-4add-9fad-15d511ea3c9f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-deec2604-80fa-4add-9fad-15d511ea3c9f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-deec2604-80fa-4add-9fad-15d511ea3c9f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 257,\n        \"min\": 1,\n        \"max\": 891,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          710,\n          440,\n          841\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 891,\n        \"samples\": [\n          \"Moubarek, Master. Halim Gonios (\\\"William George\\\")\",\n          \"Kvillner, Mr. Johan Henrik Johannesson\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"female\",\n          \"male\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.526497332334042,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 681,\n        \"samples\": [\n          \"11774\",\n          \"248740\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.6934285971809,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 147,\n        \"samples\": [\n          \"D45\",\n          \"B49\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"S\",\n          \"C\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "id": "fwymHNvrYmuX",
        "outputId": "d30d2c53-74bc-4bed-ea0b-1b5434f2109a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       PassengerId    Survived      Pclass        Name         Sex  \\\n",
              "count   891.000000  891.000000  891.000000  891.000000  891.000000   \n",
              "mean    446.000000    0.383838    2.308642  445.000000    0.647587   \n",
              "std     257.353842    0.486592    0.836071  257.353842    0.477990   \n",
              "min       1.000000    0.000000    1.000000    0.000000    0.000000   \n",
              "25%     223.500000    0.000000    2.000000  222.500000    0.000000   \n",
              "50%     446.000000    0.000000    3.000000  445.000000    1.000000   \n",
              "75%     668.500000    1.000000    3.000000  667.500000    1.000000   \n",
              "max     891.000000    1.000000    3.000000  890.000000    1.000000   \n",
              "\n",
              "              Age       SibSp       Parch      Ticket        Fare       Cabin  \\\n",
              "count  714.000000  891.000000  891.000000  891.000000  891.000000  891.000000   \n",
              "mean    29.699118    0.523008    0.381594  338.528620   32.204208  130.744108   \n",
              "std     14.526497    1.102743    0.806057  200.850657   49.693429   36.024237   \n",
              "min      0.420000    0.000000    0.000000    0.000000    0.000000    0.000000   \n",
              "25%     20.125000    0.000000    0.000000  158.500000    7.910400  147.000000   \n",
              "50%     28.000000    0.000000    0.000000  337.000000   14.454200  147.000000   \n",
              "75%     38.000000    1.000000    0.000000  519.500000   31.000000  147.000000   \n",
              "max     80.000000    8.000000    6.000000  680.000000  512.329200  147.000000   \n",
              "\n",
              "         Embarked  \n",
              "count  891.000000  \n",
              "mean     1.538721  \n",
              "std      0.794231  \n",
              "min      0.000000  \n",
              "25%      1.000000  \n",
              "50%      2.000000  \n",
              "75%      2.000000  \n",
              "max      3.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c95ebcb6-77df-4f65-b17f-30c89ff2f999\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Age</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Parch</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>891.000000</td>\n",
              "      <td>891.000000</td>\n",
              "      <td>891.000000</td>\n",
              "      <td>891.000000</td>\n",
              "      <td>891.000000</td>\n",
              "      <td>714.000000</td>\n",
              "      <td>891.000000</td>\n",
              "      <td>891.000000</td>\n",
              "      <td>891.000000</td>\n",
              "      <td>891.000000</td>\n",
              "      <td>891.000000</td>\n",
              "      <td>891.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>446.000000</td>\n",
              "      <td>0.383838</td>\n",
              "      <td>2.308642</td>\n",
              "      <td>445.000000</td>\n",
              "      <td>0.647587</td>\n",
              "      <td>29.699118</td>\n",
              "      <td>0.523008</td>\n",
              "      <td>0.381594</td>\n",
              "      <td>338.528620</td>\n",
              "      <td>32.204208</td>\n",
              "      <td>130.744108</td>\n",
              "      <td>1.538721</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>257.353842</td>\n",
              "      <td>0.486592</td>\n",
              "      <td>0.836071</td>\n",
              "      <td>257.353842</td>\n",
              "      <td>0.477990</td>\n",
              "      <td>14.526497</td>\n",
              "      <td>1.102743</td>\n",
              "      <td>0.806057</td>\n",
              "      <td>200.850657</td>\n",
              "      <td>49.693429</td>\n",
              "      <td>36.024237</td>\n",
              "      <td>0.794231</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.420000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>223.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>222.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>20.125000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>158.500000</td>\n",
              "      <td>7.910400</td>\n",
              "      <td>147.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>446.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>445.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>28.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>337.000000</td>\n",
              "      <td>14.454200</td>\n",
              "      <td>147.000000</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>668.500000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>667.500000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>38.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>519.500000</td>\n",
              "      <td>31.000000</td>\n",
              "      <td>147.000000</td>\n",
              "      <td>2.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>891.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>890.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>80.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>680.000000</td>\n",
              "      <td>512.329200</td>\n",
              "      <td>147.000000</td>\n",
              "      <td>3.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c95ebcb6-77df-4f65-b17f-30c89ff2f999')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c95ebcb6-77df-4f65-b17f-30c89ff2f999 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c95ebcb6-77df-4f65-b17f-30c89ff2f999');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d15ccfe3-385b-4d1b-a88d-9164413bd9ff\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d15ccfe3-385b-4d1b-a88d-9164413bd9ff')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d15ccfe3-385b-4d1b-a88d-9164413bd9ff button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 320.8159711429855,\n        \"min\": 1.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          891.0,\n          446.0,\n          668.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.8713661874558,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.3838383838383838,\n          1.0,\n          0.4865924542648575\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.2523437079694,\n        \"min\": 0.836071240977049,\n        \"max\": 891.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          891.0,\n          2.308641975308642,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 320.90190805334475,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          891.0,\n          445.0,\n          667.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.80797389766315,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.6475869809203143,\n          1.0,\n          0.4779900708960981\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 242.9056731818781,\n        \"min\": 0.42,\n        \"max\": 714.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          29.69911764705882,\n          28.0,\n          714.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.4908277465442,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          891.0,\n          0.5230078563411896,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.65971717879,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.38159371492704824,\n          6.0,\n          0.8060572211299483\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 292.4760453615829,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          338.5286195286195,\n          337.0,\n          891.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 330.6256632228578,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          32.204207968574636,\n          14.4542,\n          891.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 282.87796123043546,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          130.74410774410774,\n          147.0,\n          36.02423741780588\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 314.4954831243972,\n        \"min\": 0.0,\n        \"max\": 891.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          891.0,\n          1.5387205387205387,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "elXqSJ1XYqvP",
        "outputId": "3aba0f82-243e-4083-c31b-8108fb2edb04"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 891 entries, 0 to 890\n",
            "Data columns (total 12 columns):\n",
            " #   Column       Non-Null Count  Dtype  \n",
            "---  ------       --------------  -----  \n",
            " 0   PassengerId  891 non-null    int64  \n",
            " 1   Survived     891 non-null    int64  \n",
            " 2   Pclass       891 non-null    int64  \n",
            " 3   Name         891 non-null    int64  \n",
            " 4   Sex          891 non-null    int64  \n",
            " 5   Age          714 non-null    float64\n",
            " 6   SibSp        891 non-null    int64  \n",
            " 7   Parch        891 non-null    int64  \n",
            " 8   Ticket       891 non-null    int64  \n",
            " 9   Fare         891 non-null    float64\n",
            " 10  Cabin        891 non-null    int64  \n",
            " 11  Embarked     891 non-null    int64  \n",
            "dtypes: float64(2), int64(10)\n",
            "memory usage: 83.7 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=df.drop(\"PassengerId\",axis=1)\n",
        "y=df['PassengerId']"
      ],
      "metadata": {
        "id": "0MVhmm26kbyC"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# prompt: above data best visualtion each clomn wise for scatter plot and histofram\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "for col in df.columns:\n",
        "  plt.figure()\n",
        "  plt.scatter(df.index, df[col])\n",
        "  plt.title(f\"Scatter plot for {col}\")\n",
        "  plt.show()\n",
        "\n",
        "  plt.figure()\n",
        "  df[col].hist()\n",
        "  plt.title(f\"Histogram for {col}\")\n",
        "  plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4uomnBHfY6II",
        "outputId": "a092b318-974c-461d-b9c3-73e0595d70f5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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3wDFGCCAfPrppyY0NNSEhoaahIQE88QTT5hPPvnEFBQUuGyXmZlpbDabufvuu01hYaHLOofD4fzvU6dOFXuP3//+96Zy5crmzJkzzmW9evUyDRs2LLZtRkaGkWQWLlxY7D2aNGliunfvXuz94uPjza9//WvnssmTJxtJZuDAgaX6GSxcuNBIMm3btnX53LNnzzaSzLJly5zLunTpYrp06eL8/qWXXjKSzOLFi53LCgoKTEJCgomMjDT5+fnGGGOOHTtmJJnJkyeXak4HDhwwkszzzz/vsrxPnz4mLCzMfPPNN85lR44cMVWrVjWdO3cu9pk6depkzp8/X+r3mzp1qjl27JjJysoya9asMW3atDGSzD//+U9jTOn27/bt240ks3Tp0ku+34svvmgkmWPHjl1ymzfffNPYbDbz2WefuSxfsGCBkWQ2bNjgXCbJhIWFma+//tq5bOfOnUaSmTt3rnPZnXfeaSpXrmx++OEH57LMzExToUIFc+Ff7wcPHjShoaFmxowZLu+9e/duU6FCBZflXbp0MZLMggULin2GLl26mBYtWji/37Fjh5FkRo8e7bLdoEGD3PrzAZSEigcB5de//rXS09N11113aefOnZo9e7a6d++uunXr6l//+pdzuw8//FAOh0OTJk2Szeb6v8GFRxcqVark/O8TJ07oxx9/1K233qpTp07pyy+/vOp57tixQ5mZmRo0aJB++ukn/fjjj/rxxx/1888/KzExUevWrZPD4XB5zUMPPeTWe4wcOVIVK1Z0fj9q1ChVqFBBK1euvORrVq5cqdjYWA0cONC5rGLFiho7dqxOnjyptWvXujWHyyksLNSnn36qPn366JprrnEur1OnjgYNGqT169crPz/f5TUjRoxQaGhoqd9j8uTJqlWrlmJjY9W1a1d98803eu6555xHfUqzf6OioiRJn3zyiU6dOlXi+xQdfVi2bFmx/VZk6dKlatasmZo2berc3z/++KOzdlq9erXL9klJSWrcuLHz+xtuuEF2u13ffvutpF9+fv/5z3/Up08fxcXFObe79tpr1aNHD5ex3n//fTkcDvXv39/lvWNjY9WkSZNi7x0eHq5hw4aV+DkuVPRnaezYsS7LLz5ZHLgaVDwIODfddJPef/99FRQUaOfOnfrggw/04osv6p577tGOHTvUvHlzffPNN7LZbGrevPllx9q7d6/++Mc/Ki0trdgvywvPP3BXZmampF8uvb2UvLw8VatWzfl9fHy8W+/RpEkTl+8jIyNVp04dHTx48JKv+e6779SkSZNioa1Zs2bO9VY5duyYTp06peuvv77YumbNmsnhcOjw4cNq0aKFc7m7P4ORI0fq3nvvlc1mU3R0tFq0aKHw8HDn+tLs3/j4eI0fP14vvPCC3nrrLd1666266667dP/99zvDy3333ae//e1v+t3vfqcnn3xSiYmJ6tu3r+655x7nzzIzM1NffPFFifWLVPwk7gYNGhTbplq1as7ziHJycnT69Glde+21xba7eFlmZqaMMcX+TBS5MMhKUt26dRUWFlbithf67rvvZLPZXIKUpBL3KeAuAgoCVlhYmG666SbddNNNuu666zRs2DAtXbpUkydPLtXrc3Nz1aVLF9ntdk2bNk2NGzdWRESEtm3bpj/84Q+X/JdyaRS99vnnn7/k5a5F52kUufBf+8HK3Z9BkyZNlJSUVOI6d/bvn//8Zw0dOlTLli3Tp59+qrFjx2rWrFnatGmT6tWrp0qVKmndunVavXq1/v3vf+vjjz/Wu+++q27duunTTz9VaGioHA6HWrVqpRdeeKHE+dSvX9/l+0sdKTKlOP/oYg6HQyEhIfroo49KHJc/a/BFBBQEhaKbgh09elSS1LhxYzkcDu3bt++SAWHNmjX66aef9P7776tz587O5UVXgFzoUiedXmp50b847Xb7JX+BeiozM1O33Xab8/uTJ0/q6NGj6tmz5yVf07BhQ+3atUsOh8PlKEpR3VF0Nc6lPpc7atWqpcqVK2v//v3F1n355Zey2WzFfmlbyZ39K0mtWrVSq1at9Mc//lEbN25Ux44dtWDBAj3zzDOSJJvNpsTERCUmJuqFF17QzJkz9fTTT2v16tXOumbnzp1KTEy05OdXu3ZtRURE6Ouvvy627uJljRs3ljFG8fHxuu666zx+7yINGzaUw+HQN99843LUpKR9CriLc1AQUFavXl3ivzCLuvKiv0T79Okjm82madOmFTsSUvT6on9pXjheQUGB5s2bV2z8KlWqlFj5FN2nIzc312V527Zt1bhxY/3pT3/SyZMni72u6L4hnnj11Vd17tw55/fz58/X+fPni52fcKGePXsqKytL7777rnPZ+fPnNXfuXEVGRqpLly6S5LwnxsWfyx2hoaG6/fbbtWzZMpfaKTs7W0uWLFGnTp1kt9uvevzSvL905f2bn5+v8+fPuyxr1aqVbDab8/Lg48ePFxu/KPgWbdO/f3/98MMPeu2114pte/r0abevSgoNDVVSUpI+/PBDHTlyxLn866+/1kcffeSybd++fRUaGqqpU6cW+//DGKOffvrJrfcuUvRnac6cOS7LS7qrMuAujqAgoIwZM0anTp3S3XffraZNm6qgoEAbN27Uu+++q0aNGjlP/Lv22mv19NNPa/r06br11lvVt29fhYeHKyMjQ3FxcZo1a5Y6dOigatWqaciQIRo7dqxCQkL05ptvlhiA2rZtq3fffVfjx4/XTTfdpMjISN15551q3LixoqOjtWDBAlWtWlVVqlRR+/btFR8fr7/97W/q0aOHWrRooWHDhqlu3br64YcftHr1atntdi1fvtyjn0VBQYESExPVv39/7d+/X/PmzVOnTp101113XfI1I0eO1CuvvKKhQ4dq69atatSokf7xj39ow4YNeumll1S1alVJv1QAzZs317vvvqvrrrtO1atXV8uWLd2+DfozzzzjvH/I6NGjVaFCBb3yyis6e/asZs+e7dHnv5LS7t+0tDSlpKTo3nvv1XXXXafz58/rzTffVGhoqPr16ydJmjZtmtatW6devXqpYcOGysnJ0bx581SvXj3nPWseeOABvffee3rooYe0evVqdezYUYWFhfryyy/13nvv6ZNPPnH79v9TpkzRp59+qo4dO2rUqFEqLCzUyy+/rJYtW7rc0r9x48Z65plnNGHCBB08eFB9+vRR1apVdeDAAX3wwQcaOXKkHnvsMbd/hq1bt9bAgQM1b9485eXlqUOHDkpNTS3xqA7gNi9dPQSUiY8++sg8+OCDpmnTpiYyMtKEhYWZa6+91owZM8ZkZ2cX2/6NN94wbdq0MeHh4aZatWqmS5cuZtWqVc71GzZsMLfccoupVKmSiYuLc162LMmsXr3aud3JkyfNoEGDTHR0tJHkcsnxsmXLTPPmzZ2Xfl54yfH27dtN3759TY0aNUx4eLhp2LCh6d+/v0lNTXVuU3SZ8eUuYb1Q0SW5a9euNSNHjjTVqlUzkZGRZvDgweann35y2fbiy4yNMSY7O9sMGzbM1KxZ04SFhZlWrVoVu0zaGGM2btxo2rZta8LCwq54SemlLjM2xpht27aZ7t27m8jISFO5cmVz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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAigAAAGzCAYAAAAFROyYAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAyX0lEQVR4nO3de1yUdd7/8feAMIgKhAp4QNLKU2qWrjKdLEPJWMuysvI27baTYbvKZuWvg8fS2+0udws7mrZt5aG7w2akTJb6qDCTcjMsN8tWy4C1UkxzGOD7+6MHUyOoDDEz39HX8/HgofO9vtf3+lwfwHl7zVzgMMYYAQAAWCQq3AUAAAAcioACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAI0oRNPPFHjxo0LdxkRqaqqSrfffrvS09MVFRWlESNGhLuksHA4HJo+fXrIj7t48WI5HA599dVXIT82UB8CCnAYtf9gb9y4sd7t5513nnr16vWbj1NQUBCWJyTbPP300/rzn/+syy+/XM8884wmT54c1OPV1NTob3/7mwYOHKjk5GS1atVKXbt21bXXXqv169cH9dgAjq5ZuAsAjiVbt25VVFRgub+goED5+fnHfUh566231KFDBz300EMhOd4f/vAH5efn65JLLtHo0aPVrFkzbd26VW+88Ya6dOmizMzMkNRxqJ9++knNmvFPM8B3AdCEnE5nuEsI2P79+9WiRYtwl6Hy8nIlJSU12Xo1NTWqrKxUXFxcnW1lZWVasGCBbrjhBj3xxBN+2+bPn6///Oc/TVKDMUYHDx5U8+bNG7xPffUCxyNe4gGa0KHvQfF6vZoxY4ZOOeUUxcXFqXXr1jr77LPldrslSePGjVN+fr6kn997UPtRa//+/frTn/6k9PR0OZ1OdevWTQ888IAO/SXkP/30k/7whz+oTZs2atWqlS6++GJ98803dd7PMH36dDkcDm3ZskXXXHONTjjhBJ199tmSpI8//ljjxo1Tly5dFBcXp7S0NP33f/+3vvvuO79j1a7xr3/9S//1X/+lxMREtW3bVvfcc4+MMdq5c6cuueQSJSQkKC0tTf/7v/97xJ599dVXcjgcevvtt1VSUuLrwZo1awLqgcPh0MSJE/Xcc8/p1FNPldPp1MqVK+s95vbt22WM0VlnnVVnm8PhUEpKSp3zPVR979k48cQT9fvf/16rVq1S//791bx5cz3++OPq1auXzj///Dpr1NTUqEOHDrr88sv9jl/7OXvxxRflcDi0du3aOvs+/vjjcjgc+uSTT3xjn332mS6//HIlJycrLi5O/fv31z/+8Y86+5aUlGjw4MFq3ry5OnbsqNmzZ6umpqbeXgHhwhUU4Cj27t2r3bt31xn3er1H3Xf69OmaM2eOrr/+eg0YMEAVFRXauHGjPvzwQw0ZMkQ33XSTdu3aJbfbrWeffdZvX2OMLr74Yr399tsaP368+vbtq1WrVmnKlCn65ptv/F4KGTdunJYtW6YxY8YoMzNTa9euVU5OzmHruuKKK3TKKafo/vvv9z3Ru91uffnll7ruuuuUlpamkpISPfHEEyopKdH69evrPEmPGjVKPXr00Ny5c/X6669r9uzZSk5O1uOPP67Bgwfrf/7nf/Tcc8/ptttu0+9+9zude+659dbStm1bPfvss7rvvvv0448/as6cOZKkHj16BNQD6eeXiZYtW6aJEyeqTZs2OvHEE+s9ZkZGhiRp+fLluuKKKxQfH3/YXgVq69atuvrqq3XTTTfphhtuULdu3TRq1ChNnz5dpaWlSktL88195513tGvXLl111VX1rpWTk6OWLVtq2bJlGjRokN+2pUuX6tRTT/W9D6qkpERnnXWWOnTooDvvvFMtWrTQsmXLNGLECP3f//2fLr30UklSaWmpzj//fFVVVfnmPfHEEwFd5QFCwgCo16JFi4ykI36ceuqpfvtkZGSYsWPH+h6fdtppJicn54jHyc3NNfV9K77yyitGkpk9e7bf+OWXX24cDofZtm2bMcaY4uJiI8lMmjTJb964ceOMJDNt2jTf2LRp04wkc/XVV9c53oEDB+qMvfDCC0aSWbduXZ01brzxRt9YVVWV6dixo3E4HGbu3Lm+8R9++ME0b97cryeHM2jQoDr9bGgPjDFGkomKijIlJSVHPZYxxlx77bVGkjnhhBPMpZdeah544AHz6aef1plXe76Hqv362L59u28sIyPDSDIrV670m7t161YjyTz88MN+47fccotp2bKlX+8P/ZxdffXVJiUlxVRVVfnGvv32WxMVFWVmzpzpG7vgggtM7969zcGDB31jNTU15swzzzSnnHKKb2zSpElGknn//fd9Y+Xl5SYxMbHO+QDhxEs8wFHk5+fL7XbX+ejTp89R901KSlJJSYk+//zzgI9bUFCg6Oho/eEPf/Ab/9Of/iRjjN544w1J8r2Mccstt/jNu/XWWw+79s0331xn7Nf/gz548KB2797te6Pohx9+WGf+9ddf7/t7dHS0+vfvL2OMxo8f7xtPSkpSt27d9OWXXx62liNpaA9qDRo0SD179mzQ2osWLdIjjzyizp076+WXX9Ztt92mHj166IILLtA333zTqHolqXPnzsrOzvYb69q1q/r27aulS5f6xqqrq/Xiiy9q+PDhR7x6MWrUKJWXl/te8pJ+fumnpqZGo0aNkiR9//33euutt3TllVdq37592r17t3bv3q3vvvtO2dnZ+vzzz33nVFBQoMzMTA0YMMC3Xtu2bTV69OhGnzMQDAQU4CgGDBigrKysOh8nnHDCUfedOXOm9uzZo65du6p3796aMmWKPv744wYd99///rfat2+vVq1a+Y336NHDt732z6ioKHXu3Nlv3sknn3zYtQ+dK/38JPfHP/5Rqampat68udq2beubt3fv3jrzO3Xq5Pc4MTFRcXFxatOmTZ3xH3744bC1HElDe1CrvvM6nKioKOXm5qq4uFi7d+/Wq6++qmHDhumtt9467EsuDXG4GkaNGqV3333XFxTWrFmj8vJyX8g4nAsvvFCJiYl+4Wbp0qXq27evunbtKknatm2bjDG655571LZtW7+PadOmSfr5TcjSzz075ZRT6hynW7dugZ8sEEQEFCCIzj33XH3xxRd6+umn1atXLz311FM644wz9NRTT4W1rvr+x37llVfqySef1M0336yXXnpJhYWFvqsz9b2BMjo6ukFjkuq8oTVYGvs+itatW+viiy9WQUGBBg0apHfeeccXfup7g6z08xWQQGoYNWqUjDFavny5JGnZsmVKTEzUhRdeeMTanE6nRowYoZdffllVVVX65ptv9O677/oFm9rPz2233Vbv1T63233EwArYiIACBFlycrKuu+46vfDCC9q5c6f69Onjd2fN4Z4AMzIytGvXLu3bt89v/LPPPvNtr/2zpqZG27dv95u3bdu2Btf4ww8/aPXq1brzzjs1Y8YMXXrppRoyZIi6dOnS4DWCoaE9aEr9+/eXJH377beS5LtStmfPHr95h169OZrOnTtrwIABWrp0qaqqqvTSSy9pxIgRDbo1fdSoUdq9e7dWr16t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UFVVVaZVq1bmmWeeCVaJx4TG9LmqqsqceeaZ5qmnnjJjx44loDRAoH1+9NFHTZcuXUxlZWWoSjwmBNrn3NxcM3jwYL+xvLw8c9ZZZwW1zmNJQwLK7bffbk499VS/sVGjRpns7OwgVmbMcfUST2VlpYqLi5WVleUbi4qKUlZWloqKiurdp6ioyG++JGVnZx92PhrX50MdOHBAXq9XycnJwSoz4jW2zzNnzlRKSorGjx8fijIjXmP6/I9//EMul0u5ublKTU1Vr169dP/996u6ujpUZUecxvT5zDPPVHFxse9loC+//FIFBQW66KKLQlLz8SJcz4Nh+1H34bB7925VV1fX+XH6qamp+uyzz+rdp7S0tN75paWlQasz0jWmz4e644471L59+zrfFPhFY/r8zjvvaOHChdq0aVMIKjw2NKbPX375pd566y2NHj1aBQUF2rZtm2655RZ5vV5NmzYtFGVHnMb0+ZprrtHu3bt19tlnyxijqqoq3Xzzzfp//+//haLk48bhngcrKir0008/qXnz5kE57nF1BQWRYe7cuVqyZIlefvllxcXFhbucY8a+ffs0ZswYPfnkk2rTpk24yzmm1dTUKCUlRU888YT69eunUaNG6a677tJjjz0W7tKOKWvWrNH999+vBQsW6MMPP9RLL72k119/XbNmzQp3aWgCx9UVlDZt2ig6OlplZWV+42VlZUpLS6t3n7S0tIDmo3F9rvXAAw9o7ty5evPNN9WnT59glhnxAu3zF198oa+++krDhw/3jdXU1EiSmjVrpq1bt+qkk04KbtERqDFfz+3atVNMTIyio6N9Yz169FBpaakqKysVGxsb1JojUWP6fM8992jMmDG6/vrrJUm9e/fW/v37deONN+quu+5SVBT/B28Kh3seTEhICNrVE+k4u4ISGxurfv36afXq1b6xmpoarV69Wi6Xq959XC6X33xJcrvdh52PxvVZkubNm6dZs2Zp5cqV6t+/fyhKjWiB9rl79+7avHmzNm3a5Pu4+OKLdf7552vTpk1KT08PZfkRozFfz2eddZa2bdvmC4CS9K9//Uvt2rUjnBxGY/p84MCBOiGkNhQafg9ukwnb82BQ34JroSVLlhin02kWL15stmzZYm688UaTlJRkSktLjTHGjBkzxtx5552++e+++65p1qyZeeCBB8ynn35qpk2bxm3GDRBon+fOnWtiY2PNiy++aL799lvfx759+8J1ChEh0D4firt4GibQPu/YscO0atXKTJw40WzdutWsWLHCpKSkmNmzZ4frFCJCoH2eNm2aadWqlXnhhRfMl19+aQoLC81JJ51krrzyynCdQkTYt2+f+eijj8xHH31kJJkHH3zQfPTRR+bf//63McaYO++804wZM8Y3v/Y24ylTpphPP/3U5Ofnc5txsDz88MOmU6dOJjY21gwYMMCsX7/et23QoEFm7NixfvOXLVtmunbtamJjY82pp55qXn/99RBXHJkC6XNGRoaRVOdj2rRpoS88wgT69fxrBJSGC7TP7733nhk4cKBxOp2mS5cu5r777jNVVVUhrjryBNJnr9drpk+fbk466SQTFxdn0tPTzS233GJ++OGH0BceQd5+++16/72t7e3YsWPNoEGD6uzTt29fExsba7p06WIWLVoU9DodxnAdDAAA2OW4eg8KAACIDAQUAABgHQIKAACwDgEFAABYh4ACAACsQ0ABAADWIaAAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALDO/wcMZUhEdZbeCwAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAigAAAGzCAYAAAAFROyYAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAzfElEQVR4nO3de3hU1b3G8TfXCQGSGC4J0RARVIiAWChkvIshUVO8URWlGDwUWgx4IBWVeuEqUOopVA1QLYJtpRzxVFuRS0Ys0EoQjNJisCgFCwoTqjQEiCSTzDp/+GR0CGgmJjNrwvfzPPPIrL322r/9I3Fe9twijDFGAAAAFokMdQEAAAAnI6AAAADrEFAAAIB1CCgAAMA6BBQAAGAdAgoAALAOAQUAAFiHgAIAAKxDQAEAANYhoACWO/fcczVq1KhQlxGWamtr9cADDyg9PV2RkZG6+eabQ10SgEYioABBtGzZMkVEROjtt98+5farr75avXv3/tbHWb16taZNm/at1wl3zz33nH7+85/r+9//vp5//nlNmjSpRY/n9Xr1m9/8RoMGDVJycrLat2+vCy64QHfffbe2bNnSoscGWpvoUBcA4Ovt2rVLkZGB/Vti9erVKioqOuNDyhtvvKGzzz5b8+fPD8rx7rvvPhUVFemmm27SiBEjFB0drV27dmnNmjU677zzlJWVFZQ6gNaAgAJYzuFwhLqEgB0/flxt27YNdRk6dOiQkpKSmm09r9ermpoaxcXFNdhWXl6uhQsXasyYMXrmmWf8ti1YsED//ve/m60O4EzAUzyA5U5+DYrH49H06dN1/vnnKy4uTh06dNDll18ul8slSRo1apSKiookSREREb5bvePHj+snP/mJ0tPT5XA4dOGFF+qJJ57QyV9s/vnnn+u+++5Tx44d1b59e91444365JNPFBER4XdlZtq0aYqIiNDOnTt111136ayzztLll18uSfr73/+uUaNG6bzzzlNcXJxSU1P1X//1X/rss8/8jlW/xgcffKAf/OAHSkxMVKdOnfToo4/KGKP9+/frpptuUkJCglJTU/U///M/X9uzjz76SBEREfrzn/+ssrIyXw82bNgQUA8iIiI0fvx4vfDCC7rooovkcDi0du3aUx5z7969Msbosssua7AtIiJCnTt39hurqKjQxIkTfTX06NFDP/vZz+T1eiVJxhhdc8016tSpkw4dOuTbr6amRn369FH37t11/Pjxr+0DEM64ggKEwJEjR/Tpp582GPd4PN+477Rp0zRnzhz98Ic/1MCBA1VZWam3335b77zzjoYMGaIf/ehHOnDggFwul37729/67WuM0Y033qg///nPGj16tPr166d169Zp8uTJ+uSTT/yeChk1apRefPFFjRw5UllZWdq4caPy8vJOW9dtt92m888/X7Nnz/Y90LtcLu3Zs0f33HOPUlNTVVZWpmeeeUZlZWXasmWLX3CSpDvuuEO9evXS3Llz9dprr2nWrFlKTk7Wr371Kw0ePFg/+9nP9MILL+j+++/Xd7/7XV155ZWnrKVTp0767W9/q8cff1zHjh3TnDlzJEm9evUKqAfSF08Tvfjiixo/frw6duyoc88995THzMjIkCStXLlSt912m+Lj40/bq6qqKl111VX65JNP9KMf/Uhdu3bV5s2bNWXKFB08eFALFixQRESEnnvuOfXt21c//vGP9Yc//EGSNHXqVJWVlWnDhg1WXKUCWowBEDRLly41kr72dtFFF/ntk5GRYfLz8333L774YpOXl/e1xykoKDCn+vV+5ZVXjCQza9Ysv/Hvf//7JiIiwuzevdsYY0xpaamRZCZOnOg3b9SoUUaSmTp1qm9s6tSpRpK58847Gxyvqqqqwdjvf/97I8ls2rSpwRpjx471jdXW1ppzzjnHREREmLlz5/rG//Of/5g2bdr49eR0rrrqqgb9bGwPjDFGkomMjDRlZWXfeCxjjLn77ruNJHPWWWeZW265xTzxxBPm/fffbzBv5syZpm3btuaDDz7wG3/ooYdMVFSU2bdvn2/sV7/6lZFkfve735ktW7aYqKioBn8vQGvEUzxACBQVFcnlcjW49e3b9xv3TUpKUllZmT788MOAj7t69WpFRUXpvvvu8xv/yU9+ImOM1qxZI0m+pzHuvfdev3kTJkw47do//vGPG4y1adPG9+cTJ07o008/9b1Q9J133mkw/4c//KHvz1FRURowYICMMRo9erRvPCkpSRdeeKH27Nlz2lq+TmN7UO+qq65SZmZmo9ZeunSpnn76aXXr1k0vv/yy7r//fvXq1UvXXnutPvnkE9+8lStX6oorrtBZZ52lTz/91HfLzs5WXV2dNm3a5Js7duxY5ebmasKECRo5cqS6d++u2bNnN+ncgXDCUzxACAwcOFADBgxoMF7/gPV1ZsyYoZtuukkXXHCBevfureuuu04jR45sVLj517/+pbS0NLVv395vvFevXr7t9f+NjIxUt27d/Ob16NHjtGufPFeSDh8+rOnTp2vFihV+r6OQvnia62Rdu3b1u5+YmKi4uDh17NixwfjJr2NprMb2oN6pzut0IiMjVVBQoIKCAn322Wd68803tXjxYq1Zs0bDhw/XX/7yF0nShx9+qL///e/q1KnTKdc5uVdLlixR9+7d9eGHH2rz5s1+wQ9orQgoQJi58sor9c9//lN//OMfVVxcrF//+teaP3++Fi9e7HcFIthO9aB5++23a/PmzZo8ebL69eundu3ayev16rrrrvO9GPSroqKiGjUmqcELWltKU8NAhw4ddOONN+rGG2/U1VdfrY0bN+pf//qXMjIy5PV6NWTIED3wwAOn3PeCCy7wu79hwwZVV1dLknbs2CGn09mkmoBwQkABwlBycrLuuece3XPPPTp27JiuvPJKTZs2zRdQTn7xab2MjAy9/vrrOnr0qN8VhH/84x++7fX/9Xq92rt3r84//3zfvN27dze6xv/85z9av369pk+frscee8w33pSnpppTY3vQnAYMGKCNGzfq4MGDysjIUPfu3XXs2DFlZ2d/474HDx7UhAkTlJOTo9jYWN1///3Kzc1tkToBm/AaFCDMnPzURrt27dSjRw/fv7Al+d7dUVFR4Tf3hhtuUF1dnZ5++mm/8fnz5ysiIkLXX3+9JCk3N1eStHDhQr95Tz31VKPrrL/ycfKVjgULFjR6jZbQ2B4Eyu12a+fOnQ3Ga2pqtH79ekVGRvqeIrv99ttVUlKidevWNZhfUVGh2tpa3/0xY8bI6/VqyZIleuaZZxQdHa3Ro0cH7QoSECpcQQHCTGZmpq6++mr1799fycnJevvtt/XSSy9p/Pjxvjn9+/eX9MUnm+bm5ioqKkrDhw/X0KFDdc011+jhhx/WRx99pIsvvljFxcX64x//qIkTJ6p79+6+/YcNG6YFCxbos88+873N+IMPPpB0+is0X5WQkKArr7xS8+bNk8fj0dlnn63i4mLt3bu3BbrSeI3tQaA+/vhjDRw4UIMHD9a1116r1NRUHTp0SL///e/1t7/9TRMnTvS9lmby5Mn605/+pO9973saNWqU+vfvr+PHj2vHjh166aWX9NFHH6ljx45aunSp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\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAigAAAGzCAYAAAAFROyYAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAA1IklEQVR4nO3deXhU5R328XsSsgJDCJKECImgbGGXCIz4urAkxZS6UBRNNQiVSgMCqVRpFQKoINWKSwSxCNaSWmmLVso2BoXLCgKhVBaL4gYFkihbIJTJkDnvH30zr2MAMzDjPBm+n+uaS+Y5zzzn9zsJ5ubMORmbZVmWAAAADBIR6gIAAAC+jYACAACMQ0ABAADGIaAAAADjEFAAAIBxCCgAAMA4BBQAAGAcAgoAADAOAQUAABiHgAKE2GWXXaaRI0eGuowG6fTp0/rlL3+pNm3aKCIiQjfffHOoS5Ikvfvuu7LZbHr33Xe9Y9dff726du0auqKABoaAAgTQ4sWLZbPZtGXLljNuD9QPqRUrVqiwsPCC12noXn75Zf3mN7/Rj3/8Y73yyiuaNGlSUPfn8Xj0+9//Xn379lViYqKaNm2qDh066O6779bGjRsDtp+vvvpKEyZMUKdOnRQXF6ekpCT16dNHDz74oE6cOBGw/QAmaxTqAoCL3e7duxUR4d+/FVasWKGioqKLPqSsXbtWl156qZ5++unvZX/333+/ioqKdNNNNyk3N1eNGjXS7t27tXLlSrVr1079+vWTJF177bX673//q+joaL/3cfjwYWVmZqqyslKjRo1Sp06ddOjQIX344YeaN2+exo4dqyZNmgS6NcA4BBQgxGJiYkJdgt+qqqrUuHHjUJehiooKJSQkBGw9j8ej6upqxcbG1tlWXl6uF154Qffee68WLFjgs23u3Ln66quvvM8jIiLOuEZ9LFy4UHv37tU//vEPXX311T7bKisrzyv0AA0Rb/EAIfbta1DcbremT5+u9u3bKzY2Vi1atNA111wjp9MpSRo5cqSKiookSTabzfuoVVVVpV/84hdq06aNYmJi1LFjRz355JP69geX//e//9X999+vSy65RE2bNtWPfvQj7d+/XzabzefMTGFhoWw2m3bt2qU777xTzZs31zXXXCNJ+vDDDzVy5Ei1a9dOsbGxSklJ0ahRo3To0CGffdWu8fHHH+snP/mJmjVrppYtW+qRRx6RZVnat2+fbrrpJtntdqWkpOipp5465zH74osvZLPZ9M4772jnzp3eY1B7zUd9j4HNZtO4ceO0ZMkSdenSRTExMVq1atUZ9/n555/Lsiz179+/zjabzaakpCTv8zNdg1KrtLRUV199teLi4tS2bVvNnz/fZ/unn36qyMhI79mYb7Lb7T7Bp/Ytw+9aE2iIOIMCBMGxY8f09ddf1xl3u93f+drCwkLNmjVLP/3pT9WnTx9VVlZqy5Yt2rp1qwYPHqyf/exnOnDggJxOp1599VWf11qWpR/96Ed65513NHr0aPXs2VOrV6/W5MmTtX//fp+3QkaOHKnXX39dd911l/r166d169YpJyfnrHUNHz5c7du31+OPP+79Qe90OvXZZ5/pnnvuUUpKinbu3KkFCxZo586d2rhxo09wkqTbb79dnTt31uzZs/X3v/9djz76qBITE/Xiiy9qwIABeuKJJ7RkyRI98MADuuqqq3TttdeesZaWLVvq1Vdf1WOPPaYTJ05o1qxZkqTOnTv7dQyk/71N9Prrr2vcuHG65JJLdNlll51xn+np6ZKkpUuXavjw4YqPjz/rsTqbI0eO6MYbb9Rtt92mO+64Q6+//rrGjh2r6OhojRo1yrufmpoavfrqq8rLywvImkCDZAEImEWLFlmSzvno0qWLz2vS09OtvLw87/MePXpYOTk559xPfn6+daa/vm+88YYlyXr00Ud9xn/84x9bNpvN2rNnj2VZllVaWmpJsiZOnOgzb+TIkZYka9q0ad6xadOmWZKsO+64o87+Tp48WWfsj3/8oyXJWr9+fZ01xowZ4x07ffq01bp1a8tms1mzZ8/2jh85csSKi4vzOSZnc91119U5nvU9BpZlWZKsiIgIa+fOnd+5L8uyrLvvvtuSZDVv3ty65ZZbrCeffNL66KOP6sx75513LEnWO++841OrJOupp57yjrlcLqtnz55WUlKSVV1dbVmWZZWVlVktW7a0JFmdOnWy7rvvPqu4uNg6evToGfuvz5pAQ8RbPEAQFBUVyel01nl07979O1+bkJCgnTt36pNPPvF7vytWrFBkZKTuv/9+n/Ff/OIXsixLK1eulCTv2xg///nPfeaNHz/+rGvfd999dcbi4uK8fz516pS+/vpr71sTW7durTP/pz/9qffPkZGRyszMlGVZGj16tHc8ISFBHTt21GeffXbWWs6lvseg1nXXXaeMjIx6rb1o0SI9//zzatu2rZYtW6YHHnhAnTt31sCBA7V///7vfH2jRo30s5/9zPs8OjpaP/vZz1RRUaHS0lJJUnJysv71r3/pvvvu05EjRzR//nzdeeedSkpK0syZM+u8TVWfNYGGiIACBEGfPn00aNCgOo/mzZt/52tnzJiho0ePqkOHDurWrZsmT56sDz/8sF77/fLLL5WamqqmTZv6jHfu3Nm7vfa/ERERatu2rc+8K6644qxrf3uu9L87TiZMmKDk5GTFxcWpZcuW3nnHjh2rMz8tLc3nebNmzRQbG6tLLrmkzviRI0fOWsu51PcY1DpTX2cTERGh/Px8lZaW6uuvv9abb76pIUOGaO3atRoxYsR3vj41NbXOxcUdOnSQ9L/ramq1atVK8+bN08GDB7V79249++yzatmypaZOnaqFCxee15pAQ0NAAQxz7bXX6tNPP9XLL7+srl276ne/+52uvPJK/e53vwtpXd88W1Lrtttu00svvaT77rtPf/3rX7VmzRrv2RmPx1NnfmRkZL3GJNU5UxAsZ+qrPlq0aKEf/ehHWrFiha677jq99957dcLPhbLZbOrQoYPGjx+v9evXKyIiQkuWLAnoPgBTEVAAAyUmJuqee+7RH//4R+3bt0/du3f3ubPm2xef1kpPT9eBAwd0/Phxn/F///vf3u21//V4PPr888995u3Zs6feNR45ckQlJSV66KGHNH36dN1yyy0aPHiw2rVrV+81gqG+xyCQMjMzJUkHDx4857wDBw6oqqrKZ+zjjz+WpLNenFurXbt2at68eZ19XMiagMkIKIBhvn2LbpMmTXTFFVfI5XJ5x2pP6R89etRn7o033qiamho9//zzPuNPP/20bDabhgwZIknKzs6WJL3wwgs+85577rl611l75uPbZzrmzp1b7zWCob7HwF9lZWXatWtXnfHq6mqVlJQoIiLinG+RSf/71fwvvviiz2tffPFFtWzZUr1795YkffDBB3UChyRt2rRJhw4dUseOHf1eE2iIuM0YMExGRoauv/569e7dW4mJidqyZYv+/Oc/a9y4cd45tT947r//fmVnZysyMlIjRozQ0KFDdcMNN+jXv/61vvjiC/Xo0UNr1qzRm2++qYkTJ+ryyy/3vn7YsGGaO3euDh065L3NuPZf3mc7Q/NNdrtd1157rebMmSO3261LL71Ua9asqXNW5vtW32Pgr//85z/q06ePBgwYoIEDByolJUUVFRX64x//qH/961+aOHFinWtpvi01NVVPPPGEvvjiC3Xo0EF/+tOftG3bNi1YsEBRUVGSpFdffVVLlizRLbfcot69eys6OlofffSRXn75ZcXGxupXv/qV32sCDVIobyECwk3tbcabN28+4/Yz3Rb77duMH330UatPnz5WQkKCFRcXZ3Xq1Ml67LHHfG4ZPX36tDV+/HirZcuWls1m87nl+Pjx49akSZOs1NRUKyoqymrfvr31m9/8xvJ4PD77raqqsvLz863ExESrSZMm1s0332zt3r3bkuRz22/tLcJfffVVnX7+85//WLfccouVkJBgNWvWzBo+fLh14MCBs96q/O018vLyrMaNG9frOJ3J2ebV9xhIsvLz879zP5ZlWZWVldYzzzxjZWdnW61bt7aioqKspk2bWg6Hw3rppZd81j7bbcZdunSxtmzZYjkcDis2NtZKT0+3nn/+eZ/9fPjhh9bkyZOtK6+80kpMTLQaNWpktWrVyho+fLi1devWM/b/XWsCDZHNsr6nK9EAGG/btm3q1auX/vCHPyg3NzfU5eA7XH/99fr666+1Y8eOUJcCBBzXoAAXqf/+9791xubOnauIiIiz/gZXAPi+cA0KcJGaM2eOSktLdcMNN6hRo0ZauXKlVq5cqTFjxqhNmzahLg/ARY6AAlykrr76ajmdTs2cOVMnTpxQWlqaCgsL9etf/zrUpQGAuAYFAAAYh2tQAACAcQgoAADAOA3yGhSPx6MDBw6oadOm9fqFUgAAIPQsy9Lx48eVmpqqiIhznyNpkAHlwIED3GUAAEADtW/fPrVu3fqccxpkQKn9GPV9+/bJbrcHdG232601a9YoKysrLH9NNP01fOHeI/01fOHeY7j3JwWvx8rKSrVp08b7c/xcGmRAqX1bx263ByWgxMfHy263h+U3Hv01fOHeI/01fOHeY7j3JwW/x/pcnsFFsgAAwDgEFAAAYBwCCgAAMA4BBQAAGIeAAgAAjENAAQAAxiGgAAAA4xBQAACAcQgoAADAOAQUAABgHAIKAAAwDgEFAAAYh4ACAACMQ0ABAADGaRTqAkzVtXC1XDXf/XHQpvhidk6oSwAAIGD8PoOyf/9+/eQnP1GLFi0UFxenbt26acuWLd7tlmVp6tSpatWqleLi4jRo0CB98sknPmscPnxYubm5stvtSkhI0OjRo3XixIkL7wYAAIQFvwLKkSNH1L9/f0VFRWnlypXatWuXnnrqKTVv3tw7Z86cOXr22Wc1f/58ffDBB2rcuLGys7N16tQp75zc3Fzt3LlTTqdTy5cv1/r16zVmzJjAdQUAABo0v97ieeKJJ9SmTRstWrTIO9a2bVvvny3L0ty5c/Xwww/rpptukiT9/ve/V3Jyst544w2NGDFCH330kVatWqXNmzcrMzNTkvTcc8/pxhtv1JNPPqnU1NRA9AUAABowvwLK3/72N2VnZ2v48OFat26dLr30Uv385z/XvffeK0n6/PPPVVZWpkGDBnlf06xZM/Xt21cbNmzQiBEjtGHDBiUkJHjDiSQNGjRIERER+uCDD3TLLbfU2a/L5ZLL5fI+r6yslCS53W653W7/Ov4OtevFRFgBXTfY6nscaucF+riZItz7k8K/R/pr+MK9x3DvTwpej/6s51dA+eyzzzRv3jwVFBToV7/6lTZv3qz7779f0dHRysvLU1lZmSQpOTnZ53XJycnebWVlZUpKSvItolEjJSYmeud826xZszR9+vQ642vWrFF8fLw/LdTbzExPUNYNlhUrVvg13+l0BqkSM4R7f1L490h/DV+49xju/UmB7/HkyZP1nutXQPF4PMrMzNTjjz8uSerVq5d27Nih+fPnKy8vz78q/TBlyhQVFBR4n1dWVqpNmzbKysqS3W4P6L7cbrecTqce2RIhl6fh3MWzozC7XvNq+xs8eLCioqKCXNX3L9z7k8K/R/pr+MK9x3DvTwpej7XvgNSHXwGlVatWysjI8Bnr3Lmz/vKXv0iSUlJSJEnl5eVq1aqVd055ebl69uzpnVNRUeGzxunTp3X48GHv678tJiZGMTExdcajoqKC9s3h8tga1G3G/h6HYB47E4R7f1L490h/DV+49xju/UmB79Gftfy6i6d///7avXu3z9jHH3+s9PR0Sf+7YDYlJUUlJSXe7ZWVlfrggw/kcDgkSQ6HQ0ePHlVpaal3ztq1a+XxeNS3b19/ygEAAGHKrzMokyZN0tVXX63HH39ct912mzZt2qQFCxZowYIFkiSbzaaJEyfq0UcfVfv27dW2bVs98sgjSk1N1c033yzpf2dcfvCDH+jee+/V/Pnz5Xa7NW7cOI0YMYI7eAAAgCQ/A8pVV12lZcuWacqUKZoxY4batm2ruXPnKjc31zvnl7/8paqqqjRmzBgdPXpU11xzjVatWqXY2FjvnCVLlmjcuHEaOHCgIiIiNGzYMD377LOB6woAADRofv+q+x/+8If64Q9/eNbtNptNM2bM0IwZM846JzExUcXFxf7uGgAAXCT4sEAAAGAcAgoAADAOAQUAABiHgAIAAIxDQAEAAMYhoAAAAOMQUAAAgHEIKAAAwDgEFAAAYBwCCgAAMA4BBQAAGIeAAgAAjENAAQAAxiGgAAAA4xBQAACAcQgoAADAOAQUAABgHAIKAAAwDgEFAAAYh4ACAACMQ0ABAADGIaAAAADjEFAAAIBxCCgAAMA4BBQAAGAcAgoAADAOAQUAABiHgAIAAIxDQAEAAMYhoAAAAOMQUAAAgHEIKAAAwDgEFAAAYBwCCgAAMA4BBQAAGIeAAgAAjENAAQAAxiGgAAAA4xBQAACAcQgoAADAOAQUAABgHAIKAAAwDgEFAAAYh4ACAACMQ0ABAADGIaAAAADjEFAAAIBx/AoohYWFstlsPo9OnTp5t586dUr5+flq0aKFmjRpomHDhqm8vNxnjb179yonJ0fx8fFKSkrS5MmTdfr06cB0AwAAwkIjf1/QpUsXvf322/9/gUb/f4lJkybp73//u5YuXapmzZpp3LhxuvXWW/WPf/xDklRTU6OcnBylpKTo/fff18GDB3X33XcrKipKjz/+eADaAQAA4cDvgNKoUSOlpKTUGT927JgWLlyo4uJiDRgwQJK0aNEide7cWRs3blS/fv20Zs0a7dq1S2+//baSk5PVs2dPzZw5Uw8++KAKCwsVHR194R0BAIAGz++A8sknnyg1NVWxsbFyOByaNWuW0tLSVFpaKrfbrUGDBnnndurUSWlpadqwYYP69eunDRs2qFu3bkpOTvbOyc7O1tixY7Vz50716tXrjPt0uVxyuVze55WVlZIkt9stt9vtbwvnVLteTIQV0HWDrb7HoXZeoI+bKcK9Pyn8e6S/hi/cewz3/qTg9ejPejbLsur9k3jlypU6ceKEOnbsqIMHD2r69Onav3+/duzYobfeekv33HOPT5CQpD59+uiGG27QE088oTFjxujLL7/U6tWrvdtPnjypxo0ba8WKFRoyZMgZ91tYWKjp06fXGS8uLlZ8fHx9ywcAACF08uRJ3XnnnTp27Jjsdvs55/p1BuWbAaJ79+7q27ev0tPT9frrrysuLu78qq2HKVOmqKCgwPu8srJSbdq0UVZW1nc26C+32y2n06lHtkTI5bEFdO1g2lGYXa95tf0NHjxYUVFRQa7q+xfu/Unh3yP9NXzh3mO49ycFr8fad0Dqw++3eL4pISFBHTp00J49ezR48GBVV1fr6NGjSkhI8M4pLy/3XrOSkpKiTZs2+axRe5fPma5rqRUTE6OYmJg641FRUUH75nB5bHLVNJyA4u9xCOaxM0G49yeFf4/01/CFe4/h3p8U+B79WeuCfg/KiRMn9Omnn6pVq1bq3bu3oqKiVFJS4t2+e/du7d27Vw6HQ5LkcDi0fft2VVRUeOc4nU7Z7XZlZGRcSCkAACCM+HUG5YEHHtDQoUOVnp6uAwcOaNq0aYqMjNQdd9yhZs2aafTo0SooKFBiYqLsdrvGjx8vh8Ohfv36SZKysrKUkZGhu+66S3PmzFFZWZkefvhh5efnn/EMCQAAuDj5FVD+85//6I477tChQ4fUsmVLXXPNNdq4caNatmwpSXr66acVERGhYcOGyeVyKTs7Wy+88IL39ZGRkVq+fLnGjh0rh8Ohxo0bKy8vTzNmzAhsVwAAoEHzK6C89tpr59weGxuroqIiFRUVnXVOenq6VqxY4c9uAQDARYbP4gEAAMYhoAAAAOMQUAAAgHEIKAAAwDgEFAAAYBwCCgAAMA4BBQAAGIeAAgAAjENAAQAAxiGgAAAA4xBQAACAcQgoAADAOAQUAABgHAIKAAAwDgEFAAAYh4ACAACMQ0ABAADGIaAAAADjEFAAAIBxCCgAAMA4BBQAAGAcAgoAADAOAQUAABiHgAIAAIxDQAEAAMYhoAAAAOMQUAAAgHEIKAAAwDgEFAAAYBwCCgAAMA4BBQAAGIeAAgAAjENAAQAAxiGgAAAA4xBQAACAcQgoAADAOAQUAABgHAIKAAAwDgEFAAAYh4ACAACMQ0ABAADGIaAAAADjEFAAAIBxCCgAAMA4BBQAAGAcAgoAADAOAQUAABjnggLK7NmzZbPZNHHiRO/YqVOnlJ+frxYtWqhJkyYaNmyYysvLfV63d+9e5eTkKD4+XklJSZo8ebJOnz59IaUAAIAwct4BZfPmzXrxxRfVvXt3n/FJkybprbfe0tKlS7Vu3TodOHBAt956q3d7TU2NcnJyVF1drffff1+vvPKKFi9erKlTp55/FwAAIKycV0A5ceKEcnNz9dJLL6l58+be8WPHjmnhwoX67W9/qwEDBqh3795atGiR3n//fW3cuFGStGbNGu3atUt/+MMf1LNnTw0ZMkQzZ85UUVGRqqurA9MVAABo0Bqdz4vy8/OVk5OjQYMG6dFHH/WOl5aWyu12a9CgQd6xTp06KS0tTRs2bFC/fv20YcMGdevWTcnJyd452dnZGjt2rHbu3KlevXrV2Z/L5ZLL5fI+r6yslCS53W653e7zaeGsateLibACum6w1fc41M4L9HEzRbj3J4V/j/TX8IV7j+HenxS8Hv1Zz++A8tprr2nr1q3avHlznW1lZWWKjo5WQkKCz3hycrLKysq8c74ZTmq31247k1mzZmn69Ol1xtesWaP4+Hh/W6iXmZmeoKwbLCtWrPBrvtPpDFIlZgj3/qTw75H+Gr5w7zHc+5MC3+PJkyfrPdevgLJv3z5NmDBBTqdTsbGxfhd2vqZMmaKCggLv88rKSrVp00ZZWVmy2+0B3Zfb7ZbT6dQjWyLk8tgCunYw7SjMrte82v4GDx6sqKioIFf1/Qv3/qTw75H+Gr5w7zHc+5OC12PtOyD14VdAKS0tVUVFha688krvWE1NjdavX6/nn39eq1evVnV1tY4ePepzFqW8vFwpKSmSpJSUFG3atMln3dq7fGrnfFtMTIxiYmLqjEdFRQXtm8PlsclV03ACir/HIZjHzgTh3p8U/j3SX8MX7j2Ge39S4Hv0Zy2/LpIdOHCgtm/frm3btnkfmZmZys3N9f45KipKJSUl3tfs3r1be/fulcPhkCQ5HA5t375dFRUV3jlOp1N2u10ZGRn+lAMAAMKUX2dQmjZtqq5du/qMNW7cWC1atPCOjx49WgUFBUpMTJTdbtf48ePlcDjUr18/SVJWVpYyMjJ01113ac6cOSorK9PDDz+s/Pz8M54lAQAAF5/zuovnXJ5++mlFRERo2LBhcrlcys7O1gsvvODdHhkZqeXLl2vs2LFyOBxq3Lix8vLyNGPGjECXAgAAGqgLDijvvvuuz/PY2FgVFRWpqKjorK9JT0/3+64TAABw8eCzeAAAgHEIKAAAwDgEFAAAYBwCCgAAMA4BBQAAGIeAAgAAjENAAQAAxiGgAAAA4xBQAACAcQgoAADAOAQUAABgHAIKAAAwDgEFAAAYh4ACAACMQ0ABAADGIaAAAADjEFAAAIBxCCgAAMA4BBQAAGAcAgoAADAOAQUAABiHgAIAAIxDQAEAAMYhoAAAAOMQUAAAgHEIKAAAwDgEFAAAYBwCCgAAMA4BBQAAGIeAAgAAjENAAQAAxiGgAAAA4xBQAACAcQgoAADAOAQUAABgHAIKAAAwDgEFAAAYh4ACAACMQ0ABAADGIaAAAADjEFAAAIBxCCgAAMA4BBQAAGAcAgoAADAOAQUAABiHgAIAAIxDQAEAAMbxK6DMmzdP3bt3l91ul91ul8Ph0MqVK73bT506pfz8fLVo0UJNmjTRsGHDVF5e7rPG3r17lZOTo/j4eCUlJWny5Mk6ffp0YLoBAABhwa+A0rp1a82ePVulpaXasmWLBgwYoJtuukk7d+6UJE2aNElvvfWWli5dqnXr1unAgQO69dZbva+vqalRTk6Oqqur9f777+uVV17R4sWLNXXq1MB2BQAAGrRG/kweOnSoz/PHHntM8+bN08aNG9W6dWstXLhQxcXFGjBggCRp0aJF6ty5szZu3Kh+/fppzZo12rVrl95++20lJyerZ8+emjlzph588EEVFhYqOjo6cJ0BAIAGy6+A8k01NTVaunSpqqqq5HA4VFpaKrfbrUGDBnnndOrUSWlpadqwYYP69eunDRs2qFu3bkpOTvbOyc7O1tixY7Vz50716tXrjPtyuVxyuVze55WVlZIkt9stt9t9vi2cUe16MRFWQNcNtvoeh9p5gT5upgj3/qTw75H+Gr5w7zHc+5OC16M/6/kdULZv3y6Hw6FTp06pSZMmWrZsmTIyMrRt2zZFR0crISHBZ35ycrLKysokSWVlZT7hpHZ77bazmTVrlqZPn15nfM2aNYqPj/e3hXqZmekJyrrBsmLFCr/mO53OIFVihnDvTwr/Humv4Qv3HsO9PynwPZ48ebLec/0OKB07dtS2bdt07Ngx/fnPf1ZeXp7WrVvn7zJ+mTJligoKCrzPKysr1aZNG2VlZclutwd0X263W06nU49siZDLYwvo2sG0ozC7XvNq+xs8eLCioqKCXNX3L9z7k8K/R/pr+MK9x3DvTwpej7XvgNSH3wElOjpaV1xxhSSpd+/e2rx5s5555hndfvvtqq6u1tGjR33OopSXlyslJUWSlJKSok2bNvmsV3uXT+2cM4mJiVFMTEyd8aioqKB9c7g8NrlqGk5A8fc4BPPYmSDc+5PCv0f6a/jCvcdw708KfI/+rHXBvwfF4/HI5XKpd+/eioqKUklJiXfb7t27tXfvXjkcDkmSw+HQ9u3bVVFR4Z3jdDplt9uVkZFxoaUAAIAw4dcZlClTpmjIkCFKS0vT8ePHVVxcrHfffVerV69Ws2bNNHr0aBUUFCgxMVF2u13jx4+Xw+FQv379JElZWVnKyMjQXXfdpTlz5qisrEwPP/yw8vPzz3iGBAAAXJz8CigVFRW6++67dfDgQTVr1kzdu3fX6tWrNXjwYEnS008/rYiICA0bNkwul0vZ2dl64YUXvK+PjIzU8uXLNXbsWDkcDjVu3Fh5eXmaMWNGYLsCAAANml8BZeHChefcHhsbq6KiIhUVFZ11Tnp6ut93nAAAgIsLn8UDAACMQ0ABAADGIaAAAADjEFAAAIBxCCgAAMA4BBQAAGAcAgoAADAOAQUAABiHgAIAAIxDQAEAAMYhoAAAAOMQUAAAgHEIKAAAwDgEFAAAYBwCCgAAMA4BBQAAGIeAAgAAjENAAQAAxiGgAAAA4xBQAACAcQgoAADAOAQUAABgHAIKAAAwDgEFAAAYh4ACAACMQ0ABAADGIaAAAADjEFAAAIBxCCgAAMA4BBQAAGAcAgoAADAOAQUAABiHgAIAAIxDQAEAAMYhoAAAAOMQUAAAgHEIKAAAwDgEFAAAYBwCCgAAMA4BBQAAGIeAAgAAjENAAQAAxiGgAAAA4xBQAACAcQgoAADAOI1CXQAC47KH/l6veTGRlub0kboWrparxhbkqs7ti9k5Id0/AMBcnEEBAADG8SugzJo1S1dddZWaNm2qpKQk3Xzzzdq9e7fPnFOnTik/P18tWrRQkyZNNGzYMJWXl/vM2bt3r3JychQfH6+kpCRNnjxZp0+fvvBuAABAWPAroKxbt075+fnauHGjnE6n3G63srKyVFVV5Z0zadIkvfXWW1q6dKnWrVunAwcO6NZbb/Vur6mpUU5Ojqqrq/X+++/rlVde0eLFizV16tTAdQUAABo0v65BWbVqlc/zxYsXKykpSaWlpbr22mt17NgxLVy4UMXFxRowYIAkadGiRercubM2btyofv36ac2aNdq1a5fefvttJScnq2fPnpo5c6YefPBBFRYWKjo6us5+XS6XXC6X93llZaUkye12y+12+930udSuFxNhBXRdU9T2ZUJ/gf7afXPNYKxtinDvkf4avnDvMdz7k4LXoz/r2SzLOu+fVHv27FH79u21fft2de3aVWvXrtXAgQN15MgRJSQkeOelp6dr4sSJmjRpkqZOnaq//e1v2rZtm3f7559/rnbt2mnr1q3q1atXnf0UFhZq+vTpdcaLi4sVHx9/vuUDAIDv0cmTJ3XnnXfq2LFjstvt55x73nfxeDweTZw4Uf3791fXrl0lSWVlZYqOjvYJJ5KUnJyssrIy75zk5OQ622u3ncmUKVNUUFDgfV5ZWak2bdooKyvrOxv0l9vtltPp1CNbIuTyhPYul2CIibA0M9NjRH87CrMDvmbt12/w4MGKiooK+PomCPce6a/hC/cew70/KXg91r4DUh/nHVDy8/O1Y8cOvffee+e7RL3FxMQoJiamznhUVFTQvjlcHlvIb8MNJhP6C+Zf7GB+b5gi3Hukv4Yv3HsM9/6kwPfoz1rndZvxuHHjtHz5cr3zzjtq3bq1dzwlJUXV1dU6evSoz/zy8nKlpKR453z7rp7a57VzAADAxc2vgGJZlsaNG6dly5Zp7dq1atu2rc/23r17KyoqSiUlJd6x3bt3a+/evXI4HJIkh8Oh7du3q6KiwjvH6XTKbrcrIyPjQnoBAABhwq+3ePLz81VcXKw333xTTZs29V4z0qxZM8XFxalZs2YaPXq0CgoKlJiYKLvdrvHjx8vhcKhfv36SpKysLGVkZOiuu+7SnDlzVFZWpocfflj5+flnfBsHAABcfPwKKPPmzZMkXX/99T7jixYt0siRIyVJTz/9tCIiIjRs2DC5XC5lZ2frhRde8M6NjIzU8uXLNXbsWDkcDjVu3Fh5eXmaMWPGhXUCAADChl8BpT53JMfGxqqoqEhFRUVnnZOenq4VK1b4s2sAAHAR4bN4AACAcQgoAADAOAQUAABgHAIKAAAwDgEFAAAYh4ACAACMQ0ABAADGIaAAAADjEFAAAIBxCCgAAMA4BBQAAGAcAgoAADAOAQUAABiHgAIAAIxDQAEAAMYhoAAAAOMQUAAAgHEIKAAAwDgEFAAAYBwCCgAAMA4BBQAAGIeAAgAAjENAAQAAxiGgAAAA4xBQAACAcQgoAADAOAQUAABgHAIKAAAwDgEFAAAYh4ACAACMQ0ABAADGIaAAAADjEFAAAIBxCCgAAMA4BBQAAGAcAgoAADAOAQUAABiHgAIAAIxDQAEAAMYhoAAAAOMQUAAAgHEIKAAAwDgEFAAAYBwCCgAAMA4BBQAAGIeAAgAAjENAAQAAxvE7oKxfv15Dhw5VamqqbDab3njjDZ/tlmVp6tSpatWqleLi4jRo0CB98sknPnMOHz6s3Nxc2e12JSQkaPTo0Tpx4sQFNQIAAMKH3wGlqqpKPXr0UFFR0Rm3z5kzR88++6zmz5+vDz74QI0bN1Z2drZOnTrlnZObm6udO3fK6XRq+fLlWr9+vcaMGXP+XQAAgLDSyN8XDBkyREOGDDnjNsuyNHfuXD388MO66aabJEm///3vlZycrDfeeEMjRozQRx99pFWrVmnz5s3KzMyUJD333HO68cYb9eSTTyo1NbXOui6XSy6Xy/u8srJSkuR2u+V2u/1t4Zxq14uJsAK6rilq+zKhv0B/7b65ZjDWNkW490h/DV+49xju/UnB69Gf9WyWZZ33TyqbzaZly5bp5ptvliR99tlnuvzyy/XPf/5TPXv29M677rrr1LNnTz3zzDN6+eWX9Ytf/EJHjhzxbj99+rRiY2O1dOlS3XLLLXX2U1hYqOnTp9cZLy4uVnx8/PmWDwAAvkcnT57UnXfeqWPHjslut59zrt9nUM6lrKxMkpScnOwznpyc7N1WVlampKQk3yIaNVJiYqJ3zrdNmTJFBQUF3ueVlZVq06aNsrKyvrNBf7ndbjmdTj2yJUIujy2ga5sgJsLSzEyPEf3tKMwO+Jq1X7/BgwcrKioq4OubINx7pL+GL9x7DPf+pOD1WPsOSH0ENKAES0xMjGJiYuqMR0VFBe2bw+WxyVUTfgGllgn9BfMvdjC/N0wR7j3SX8MX7j2Ge39S4Hv0Z62A3mackpIiSSovL/cZLy8v925LSUlRRUWFz/bTp0/r8OHD3jkAAODiFtCA0rZtW6WkpKikpMQ7VllZqQ8++EAOh0OS5HA4dPToUZWWlnrnrF27Vh6PR3379g1kOQAAoIHy+y2eEydOaM+ePd7nn3/+ubZt26bExESlpaVp4sSJevTRR9W+fXu1bdtWjzzyiFJTU70X0nbu3Fk/+MEPdO+992r+/Plyu90aN26cRowYccY7eAAAwMXH74CyZcsW3XDDDd7ntRev5uXlafHixfrlL3+pqqoqjRkzRkePHtU111yjVatWKTY21vuaJUuWaNy4cRo4cKAiIiI0bNgwPfvsswFoBwAAhAO/A8r111+vc92ZbLPZNGPGDM2YMeOscxITE1VcXOzvrgEAwEWCz+IBAADGIaAAAADjEFAAAIBxCCgAAMA4BBQAAGAcAgoAADAOAQUAABiHgAIAAIxDQAEAAMYhoAAAAOMQUAAAgHEIKAAAwDgEFAAAYBwCCgAAMA4BBQAAGIeAAgAAjENAAQAAxiGgAAAA4xBQAACAcQgoAADAOAQUAABgHAIKAAAwDgEFAAAYh4ACAACMQ0ABAADGIaAAAADjEFAAAIBxCCgAAMA4BBQAAGAcAgoAADAOAQUAABiHgAIAAIxDQAEAAMYhoAAAAOM0CnUBuHhd9tDfA75mTKSlOX2kroWr5aqxBXz9L2bnBHxNAEBdnEEBAADGIaAAAADjEFAAAIBxCCgAAMA4BBQAAGAc7uIBYKRg3YkVLNzhBQQWAQXwQzBujfaXv7dS84MTQEPEWzwAAMA4BBQAAGAcAgoAADAOAQUAABgnpBfJFhUV6Te/+Y3KysrUo0cPPffcc+rTp08oSwIAIKBMuLjeX7UX44dSyALKn/70JxUUFGj+/Pnq27ev5s6dq+zsbO3evVtJSUmhKgsAzkt9fwgF+wMt/cEdXjBZyN7i+e1vf6t7771X99xzjzIyMjR//nzFx8fr5ZdfDlVJAADAECE5g1JdXa3S0lJNmTLFOxYREaFBgwZpw4YNdea7XC65XC7v82PHjkmSDh8+LLfbHdDa3G63Tp48qUbuCNV4Gs4viaqvRh5LJ0966K8B87fHQ4cOfQ9VBQ5/B78/wfreqP0aHjp0SFFRUUHZRyj521+j01XfQ1WBVft9Guiv4fHjxyVJlmV992QrBPbv329Jst5//32f8cmTJ1t9+vSpM3/atGmWJB48ePDgwYNHGDz27dv3nVmhQfwm2SlTpqigoMD73OPx6PDhw2rRooVstsD+C6SyslJt2rTRvn37ZLfbA7q2Ceiv4Qv3Humv4Qv3HsO9Pyl4PVqWpePHjys1NfU754YkoFxyySWKjIxUeXm5z3h5eblSUlLqzI+JiVFMTIzPWEJCQjBLlN1uD9tvPIn+wkG490h/DV+49xju/UnB6bFZs2b1mheSi2Sjo6PVu3dvlZSUeMc8Ho9KSkrkcDhCURIAADBIyN7iKSgoUF5enjIzM9WnTx/NnTtXVVVVuueee0JVEgAAMETIAsrtt9+ur776SlOnTlVZWZl69uypVatWKTk5OVQlSfrf20nTpk2r85ZSuKC/hi/ce6S/hi/cewz3/iQzerRZVn3u9QEAAPj+8Fk8AADAOAQUAABgHAIKAAAwDgEFAAAYh4ACAACMQ0D5hqKiIl122WWKjY1V3759tWnTplCXFDDr16/X0KFDlZqaKpvNpjfeeCPUJQXUrFmzdNVVV6lp06ZKSkrSzTffrN27d4e6rICZN2+eunfv7v2tjg6HQytXrgx1WUEze/Zs2Ww2TZw4MdSlBExhYaFsNpvPo1OnTqEuK6D279+vn/zkJ2rRooXi4uLUrVs3bdmyJdRlBcxll11W52tos9mUn58f6tICoqamRo888ojatm2ruLg4XX755Zo5c2b9PtgvCAgo/8+f/vQnFRQUaNq0adq6dat69Oih7OxsVVRUhLq0gKiqqlKPHj1UVFQU6lKCYt26dcrPz9fGjRvldDrldruVlZWlqqqG9ymiZ9K6dWvNnj1bpaWl2rJliwYMGKCbbrpJO3fuDHVpAbd582a9+OKL6t69e6hLCbguXbro4MGD3sd7770X6pIC5siRI+rfv7+ioqK0cuVK7dq1S0899ZSaN28e6tICZvPmzT5fP6fTKUkaPnx4iCsLjCeeeELz5s3T888/r48++khPPPGE5syZo+eeey40BQXk44nDQJ8+faz8/Hzv85qaGis1NdWaNWtWCKsKDknWsmXLQl1GUFVUVFiSrHXr1oW6lKBp3ry59bvf/S7UZQTU8ePHrfbt21tOp9O67rrrrAkTJoS6pICZNm2a1aNHj1CXETQPPvigdc0114S6jO/VhAkTrMsvv9zyeDyhLiUgcnJyrFGjRvmM3XrrrVZubm5I6uEMiqTq6mqVlpZq0KBB3rGIiAgNGjRIGzZsCGFlOF/Hjh2TJCUmJoa4ksCrqanRa6+9pqqqqrD77Kr8/Hzl5OT4/F0MJ5988olSU1PVrl075ebmau/evaEuKWD+9re/KTMzU8OHD1dSUpJ69eqll156KdRlBU11dbX+8Ic/aNSoUbLZbKEuJyCuvvpqlZSU6OOPP5Yk/etf/9J7772nIUOGhKSekP2qe5N8/fXXqqmpqfNr9pOTk/Xvf/87RFXhfHk8Hk2cOFH9+/dX165dQ11OwGzfvl0Oh0OnTp1SkyZNtGzZMmVkZIS6rIB57bXXtHXrVm3evDnUpQRF3759tXjxYnXs2FEHDx7U9OnT9X/+z//Rjh071LRp01CXd8E+++wzzZs3TwUFBfrVr36lzZs36/7771d0dLTy8vJCXV7AvfHGGzp69KhGjhwZ6lIC5qGHHlJlZaU6deqkyMhI1dTU6LHHHlNubm5I6iGgIOzk5+drx44dYfX+viR17NhR27Zt07Fjx/TnP/9ZeXl5WrduXViElH379mnChAlyOp2KjY0NdTlB8c1/hXbv3l19+/ZVenq6Xn/9dY0ePTqElQWGx+NRZmamHn/8cUlSr169tGPHDs2fPz8sA8rChQs1ZMgQpaamhrqUgHn99de1ZMkSFRcXq0uXLtq2bZsmTpyo1NTUkHwNCSiSLrnkEkVGRqq8vNxnvLy8XCkpKSGqCudj3LhxWr58udavX6/WrVuHupyAio6O1hVXXCFJ6t27tzZv3qxnnnlGL774Yogru3ClpaWqqKjQlVde6R2rqanR+vXr9fzzz8vlcikyMjKEFQZeQkKCOnTooD179oS6lIBo1apVnbDcuXNn/eUvfwlRRcHz5Zdf6u2339Zf//rXUJcSUJMnT9ZDDz2kESNGSJK6deumL7/8UrNmzQpJQOEaFP3vf/y9e/dWSUmJd8zj8aikpCTs3uMPV5Zlady4cVq2bJnWrl2rtm3bhrqkoPN4PHK5XKEuIyAGDhyo7du3a9u2bd5HZmamcnNztW3btrALJ5J04sQJffrpp2rVqlWoSwmI/v3717m1/+OPP1Z6enqIKgqeRYsWKSkpSTk5OaEuJaBOnjypiAjfWBAZGSmPxxOSejiD8v8UFBQoLy9PmZmZ6tOnj+bOnauqqirdc889oS4tIE6cOOHzL7XPP/9c27ZtU2JiotLS0kJYWWDk5+eruLhYb775ppo2baqysjJJUrNmzRQXFxfi6i7clClTNGTIEKWlpen48eMqLi7Wu+++q9WrV4e6tIBo2rRpneuFGjdurBYtWoTNdUQPPPCAhg4dqvT0dB04cEDTpk1TZGSk7rjjjlCXFhCTJk3S1Vdfrccff1y33XabNm3apAULFmjBggWhLi2gPB6PFi1apLy8PDVqFF4/QocOHarHHntMaWlp6tKli/75z3/qt7/9rUaNGhWagkJy75ChnnvuOSstLc2Kjo62+vTpY23cuDHUJQXMO++8Y0mq88jLywt1aQFxpt4kWYsWLQp1aQExatQoKz093YqOjrZatmxpDRw40FqzZk2oywqqcLvN+Pbbb7datWplRUdHW5deeql1++23W3v27Al1WQH11ltvWV27drViYmKsTp06WQsWLAh1SQG3evVqS5K1e/fuUJcScJWVldaECROstLQ0KzY21mrXrp3161//2nK5XCGpx2ZZIfoVcQAAAGfBNSgAAMA4BBQAAGAcAgoAADAOAQUAABiHgAIAAIxDQAEAAMYhoAAAAOMQUAAAgHEIKAAAwDgEFAAAYBwCCgAAMM7/BQxz2BftIGy4AAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAiMAAAGzCAYAAAD9pBdvAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABDOElEQVR4nO3deXhU1eH/8c9MlklCMhMCZAECRKRCABFZQxVQUUAqor+2FheWWnCBVmu/tqVVAZfGinWpWtC2wrdSvliqiFrEUhBQCcoilqVS1IBUs7BmhWxzfn/QGTPJTDKTTHIJvF/PM8/D3Dn3nnPPOffOh5m5NzZjjBEAAIBF7FY3AAAAnNsIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWIowAgAALEUYAQAAliKMAAAASxFGAACApQgjALxGjx6t0aNHt0pd+/fv11VXXSWXyyWbzabXXnutVeptadOmTVN8fHyr1HXgwAHZbDY9/vjjLVpPa84LnJsIIzjr7dq1S9/+9rfVvXt3xcTEqEuXLrryyiv1zDPPtFidy5Yt01NPPVVv+VdffaV58+Zp586dLVa3FcrLyzVv3jxt2LAh6HWmTp2qXbt26ZFHHtFLL72kwYMHt1j7PG/agR6PPvpoi9UNoHGRVjcAaEmbN2/WZZddpm7dumnGjBlKTU3VoUOHtGXLFj399NP64Q9/2CL1Llu2TLt379bdd9/ts/yrr77S/Pnz1aNHD1100UUtUrcVysvLNX/+fEkK6n/QJ0+eVE5Ojn75y19q9uzZLdy6r02ePFlXX311veUDBw5stTYAqI8wgrPaI488IpfLpa1btyoxMdHntcLCQmsa1QLKysrUrl07q5sRtMOHD0tSvTFpjmD64OKLL9bNN98ctjqt4na7VVlZaXUzgLDhaxqc1T777DP17dvX75tecnJyvWVLly7V0KFDFRcXp/bt22vkyJH6+9//7n191apVmjBhgjp37iyHw6GePXvqoYceUk1NjbfM6NGj9be//U0HDx70fg3Qo0cPbdiwQUOGDJEkTZ8+3fvakiVLvOt+8MEHGjdunFwul+Li4jRq1Ci9//77Pm2cN2+ebDab9u7dqxtvvFHt27fXJZdcErAPlixZIpvNpk2bNum2225Thw4d5HQ6NWXKFB0/frzRPiwsLNStt96qlJQUxcTEaMCAAfrf//1f7+sHDhxQp06dJEnz58/37te8efP8bm/evHnq3r27JOnee+/19o/HRx99pPHjx8vpdCo+Pl5XXHGFtmzZ4nefNm7cqDvvvFPJycnq2rVro/sSjB49euhb3/qWNmzYoMGDBys2Nlb9+/f3fgX16quvqn///oqJidGgQYP00Ucf+d3O559/rrFjx6pdu3bq3LmzHnzwQdX9I+mPP/64RowYoQ4dOig2NlaDBg3SX//613rbstlsmj17tv785z+rb9++cjgcWrNmjd96jTGaOXOmoqOj9eqrr3qXL126VIMGDVJsbKySkpL0ve99T4cOHaq3/gsvvKCePXsqNjZWQ4cO1bvvvhts1wFNxicjOKt1795dOTk52r17t/r169dg2fnz52vevHkaMWKEHnzwQUVHR+uDDz7Q+vXrddVVV0k6/SYYHx+ve+65R/Hx8Vq/fr0eeOABFRcXa8GCBZKkX/7ylyoqKtJ//vMfPfnkk5Kk+Ph49enTRw8++KAeeOABzZw5U5deeqkkacSIEZKk9evXa/z48Ro0aJDmzp0ru92uxYsX6/LLL9e7776roUOH+rT3O9/5jnr16qVf/epX9d7k/Jk9e7YSExM1b9487du3TwsXLtTBgwe1YcMG2Ww2v+ucPHlSo0eP1qeffqrZs2crIyNDK1as0LRp03TixAnddddd6tSpkxYuXKg77rhD1113na6//npJ0oUXXuh3m9dff70SExP14x//2Pu1iecHn3v27NGll14qp9Opn/70p4qKitLzzz+v0aNHa+PGjRo2bJjPtu6880516tRJDzzwgMrKyhrtg/Lych05cqTe8sTEREVGfn06/PTTT3XjjTfqtttu080336zHH39c11xzjRYtWqRf/OIXuvPOOyVJ2dnZ+u53v6t9+/bJbv/6/3Y1NTUaN26chg8frscee0xr1qzR3LlzVV1drQcffNBb7umnn9bEiRN10003qbKyUsuXL9d3vvMdvfnmm5owYYJPG9evX6+//OUvmj17tjp27OgT4GrX+/3vf18vv/yyVq5c6d3GI488ovvvv1/f/e539YMf/ECHDx/WM888o5EjR+qjjz7yhvU//vGPuu222zRixAjdfffd+vzzzzVx4kQlJSUpPT290f4FmswAZ7G///3vJiIiwkRERJisrCzz05/+1Lz99tumsrLSp9z+/fuN3W431113nampqfF5ze12e/9dXl5er47bbrvNxMXFmVOnTnmXTZgwwXTv3r1e2a1btxpJZvHixfXq6NWrlxk7dmy9+jIyMsyVV17pXTZ37lwjyUyePDmoPli8eLGRZAYNGuSz34899piRZFatWuVdNmrUKDNq1Cjv86eeespIMkuXLvUuq6ysNFlZWSY+Pt4UFxcbY4w5fPiwkWTmzp0bVJtyc3ONJLNgwQKf5ZMmTTLR0dHms88+8y776quvTEJCghk5cmS9fbrkkktMdXV10PUFeuTk5HjLdu/e3Ugymzdv9i57++23jSQTGxtrDh486F3+/PPPG0nmnXfe8S6bOnWqkWR++MMfepe53W4zYcIEEx0dbQ4fPuxdXnc+VVZWmn79+pnLL7/cZ7kkY7fbzZ49e/zu14IFC0xVVZW54YYbTGxsrHn77be9ZQ4cOGAiIiLMI4884rPurl27TGRkpHd5ZWWlSU5ONhdddJGpqKjwlnvhhReMJJ95AYQbX9PgrHbllVcqJydHEydO1Mcff6zHHntMY8eOVZcuXfT66697y7322mtyu9164IEHfP6HK8nnU4PY2Fjvv0tKSnTkyBFdeumlKi8v1yeffNLkdu7cuVP79+/XjTfeqKNHj+rIkSM6cuSIysrKdMUVV2jTpk1yu90+69x+++0h1TFz5kxFRUV5n99xxx2KjIzU6tWrA66zevVqpaamavLkyd5lUVFR+tGPfqTS0lJt3LgxpDY0pKamRn//+981adIknXfeed7laWlpuvHGG/Xee++puLjYZ50ZM2YoIiIi6DpmzpyptWvX1ntkZmb6lMvMzFRWVpb3uecTmcsvv1zdunWrt/zzzz+vV1ftH+Z6vmaprKzUP/7xD+/y2vPp+PHjKioq0qWXXqodO3bU296oUaPqtdOjsrLS+4nK6tWrvZ/kSae/VnK73frud7/rnVdHjhxRamqqevXqpXfeeUeStG3bNhUWFur2229XdHS0d/1p06bJ5XL5rRcIF76mwVlvyJAhevXVV1VZWamPP/5YK1eu1JNPPqlvf/vb2rlzpzIzM/XZZ5/JbrcHPNl77NmzR/fdd5/Wr19f742xqKioyW3cv3+/pNOXuwZSVFSk9u3be59nZGSEVEevXr18nsfHxystLU0HDhwIuM7BgwfVq1evegGtT58+3tfD5fDhwyovL9cFF1xQ77U+ffrI7Xbr0KFD6tu3r3d5U/pgzJgxjZarHTgked+M635V4Vle97c3drvdJ1BJ0je+8Q1J8unvN998Uw8//LB27typiooK73J/X5s1tK/Z2dkqLS3VW2+9Ve9qpv3798sYU2/8PTwB1TOWdctFRUXV2xcg3AgjOGdER0dryJAhGjJkiL7xjW9o+vTpWrFihebOnRvU+idOnNCoUaPkdDr14IMPqmfPnoqJidGOHTv0s5/9rN4nF6HwrLtgwYKAl/zWvZFW7f9Vn6taqg8CfdoSaLkJ4jc7db377ruaOHGiRo4cqd/97ndKS0tTVFSUFi9erGXLltUr39C+jh07VmvWrNFjjz2m0aNHKyYmxvua2+2WzWbTW2+95bf9rXWDNqAhhBGckzw32MrLy5Mk9ezZU263W3v37g0YBjZs2KCjR4/q1Vdf1ciRI73Lc3Nz65UN9IPQQMt79uwpSXI6nUH9z70p9u/fr8suu8z7vLS0VHl5eX7vu+HRvXt3/fOf/5Tb7fb5dMTzlZTnqphA+xWKTp06KS4uTvv27av32ieffCK73d5mfkTpdrv1+eefez8NkaR///vfkuT94ekrr7yimJgYvf3223I4HN5yixcvDrm+4cOH6/bbb9e3vvUtfec739HKlSu9P8jt2bOnjDHKyMjwaU9dnrHcv3+/Lr/8cu/yqqoq5ebmasCAASG3CwgWvxnBWe2dd97x+79Wz+8kPF8JTJo0SXa7XQ8++GC9Tzg863v+V1l7e5WVlfrd735Xb/vt2rXz+7WN5z4YJ06c8Fk+aNAg9ezZU48//rhKS0vrree5L0dzvPDCC6qqqvI+X7hwoaqrqzV+/PiA61x99dXKz8/Xyy+/7F1WXV2tZ555RvHx8Ro1apQkKS4uTlL9/QpFRESErrrqKq1atcrnq4yCggItW7ZMl1xyiZxOZ5O339qeffZZ77+NMXr22WcVFRWlK664QtLp/bXZbD6XhR84cKDJt8UfM2aMli9frjVr1uiWW27xzuPrr79eERERmj9/fr1jwRijo0ePSjod0Dt16qRFixb53MNkyZIlzRpXIBh8MoKz2g9/+EOVl5fruuuuU+/evVVZWanNmzfr5ZdfVo8ePTR9+nRJ0vnnn69f/vKXeuihh3TppZfq+uuvl8Ph0NatW9W5c2dlZ2drxIgRat++vaZOnaof/ehHstlseumll/yGnUGDBunll1/WPffcoyFDhig+Pl7XXHONevbsqcTERC1atEgJCQlq166dhg0bpoyMDP3hD3/Q+PHj1bdvX02fPl1dunTRl19+qXfeeUdOp1NvvPFGs/qisrJSV1xxhfdS1N/97ne65JJLNHHixIDrzJw5U88//7ymTZum7du3q0ePHvrrX/+q999/X0899ZQSEhIknf4KITMzUy+//LK+8Y1vKCkpSf369Wv0cuq6Hn74Ya1du1aXXHKJ7rzzTkVGRur5559XRUWFHnvssWbtvyTt2LFDS5curbe8Z8+ePj9Yba6YmBitWbNGU6dO1bBhw/TWW2/pb3/7m37xi19478kyYcIEPfHEExo3bpxuvPFGFRYW6rnnntP555+vf/7zn02qd9KkSVq8eLGmTJkip9Op559/Xj179tTDDz+sOXPm6MCBA5o0aZISEhKUm5urlStXaubMmfqf//kfRUVF6eGHH9Ztt92myy+/XDfccINyc3O1ePFifjOClmfVZTxAa3jrrbfM97//fdO7d28THx9voqOjzfnnn29++MMfmoKCgnrlX3zxRTNw4EDjcDhM+/btzahRo8zatWu9r7///vtm+PDhJjY21nTu3Nl7qbDqXN5ZWlpqbrzxRpOYmGgk+Vzmu2rVKpOZmWkiIyPrXeb70Ucfmeuvv9506NDBOBwO0717d/Pd737XrFu3zlvGc2lv7UtEG+K5DHbjxo1m5syZpn379iY+Pt7cdNNN5ujRoz5l617aa4wxBQUFZvr06aZjx44mOjra9O/fv96lycYYs3nzZjNo0CATHR3d6GW+gS7tNcaYHTt2mLFjx5r4+HgTFxdnLrvsMp/LbGvv09atW4Pqg8Yu7Z06daq3bPfu3c2ECRPqbUOSmTVrVqP7MXXqVNOuXTvz2WefmauuusrExcWZlJQUM3fu3HqXjf/xj380vXr1Mg6Hw/Tu3dssXrzYO76N1R2ofmOM+d3vfmckmf/5n//xLnvllVfMJZdcYtq1a2fatWtnevfubWbNmmX27dtXb92MjAzjcDjM4MGDzaZNm/zOCyCcbMY04ZdXANqMJUuWaPr06dq6dWuL/jE6AGgqfjMCAAAsRRgBAACWIowAAABL8ZsRAABgKT4ZAQAAliKMAAAAS7WJm5653W599dVXSkhICMttpwEAQMszxqikpESdO3eu9wc3a2sTYeSrr75qM3+TAgAA+Dp06JC6du0a8PU2EUY8t5w+dOhQm/rbFAAAnMuKi4uVnp7ufR8PpE2EEc9XM06nkzACAEAb09hPLPgBKwAAsBRhBAAAWIowAgAALEUYAQAAliKMAAAASxFGAACApQgjAADAUoQRAABgqTZx07OzTY3b6MPcYyosOaXkhBgNzUhShJ2/uQMA5yLeEwgjrW7N7jzNf2Ov8opOeZeluWI095pMjeuXZmHLAACtjfeE00L6mmbhwoW68MILvbdlz8rK0ltvvdXgOitWrFDv3r0VExOj/v37a/Xq1c1qcFu2Znee7li6w2fSSVJ+0SndsXSH1uzOs6hlAIDWxnvC10IKI127dtWjjz6q7du3a9u2bbr88st17bXXas+ePX7Lb968WZMnT9att96qjz76SJMmTdKkSZO0e/fusDS+LalxG81/Y6+Mn9c8y+a/sVc1bn8lAABnE94TfNmMMc3a06SkJC1YsEC33nprvdduuOEGlZWV6c033/QuGz58uC666CItWrQo4DYrKipUUVHhfe75q39FRUVt9g/l5Xx2VJN/v6XRcv83Y7iyenZohRYBAKxyrrwnFBcXy+VyNfr+3eSraWpqarR8+XKVlZUpKyvLb5mcnByNGTPGZ9nYsWOVk5PT4Lazs7Plcrm8j/T09KY284xRWHKq8UIhlAMAtF28J/gKOYzs2rVL8fHxcjgcuv3227Vy5UplZmb6LZufn6+UlBSfZSkpKcrPz2+wjjlz5qioqMj7OHToUKjNPOMkJ8SEtRwAoO3iPcFXyFfTXHDBBdq5c6eKior017/+VVOnTtXGjRsDBpKmcDgccjgcYdvemWBoRpLSXDHKLzrl9ztCm6RU1+lLugAAZzfeE3yF/MlIdHS0zj//fA0aNEjZ2dkaMGCAnn76ab9lU1NTVVBQ4LOsoKBAqampTWttGxZht2nuNacDW92rxz3P516Tec5dWw4A5yLeE3w1+w6sbrfb58emtWVlZWndunU+y9auXRvwNyZnu3H90rTw5ouV6vL92C3VFaOFN198Tl1TDgDnOt4TvhbS1zRz5szR+PHj1a1bN5WUlGjZsmXasGGD3n77bUnSlClT1KVLF2VnZ0uS7rrrLo0aNUq/+c1vNGHCBC1fvlzbtm3TCy+8EP49aSPG9UvTlZmp5/zd9gAAvCd4hBRGCgsLNWXKFOXl5cnlcunCCy/U22+/rSuvvFKS9MUXX8hu//rDlhEjRmjZsmW677779Itf/EK9evXSa6+9pn79+oV3L9qYCLutTV+qBQAIH94TwnCfkdYQ7HXKAADgzNHi9xkBAAAIB8IIAACwFGEEAABYijACAAAsRRgBAACWIowAAABLEUYAAIClCCMAAMBShBEAAGApwggAALAUYQQAAFiKMAIAACxFGAEAAJYijAAAAEsRRgAAgKUIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWIowAgAALEUYAQAAliKMAAAASxFGAACApQgjAADAUoQRAABgKcIIAACwFGEEAABYijACAAAsRRgBAACWIowAAABLEUYAAIClCCMAAMBShBEAAGApwggAALAUYQQAAFiKMAIAACxFGAEAAJYijAAAAEsRRgAAgKUIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWIowAgAALEUYAQAAlgopjGRnZ2vIkCFKSEhQcnKyJk2apH379jW4zpIlS2Sz2XweMTExzWo0AAA4e4QURjZu3KhZs2Zpy5YtWrt2raqqqnTVVVeprKyswfWcTqfy8vK8j4MHDzar0QAA4OwRGUrhNWvW+DxfsmSJkpOTtX37do0cOTLgejabTampqUHXU1FRoYqKCu/z4uLiUJoJAADakGb9ZqSoqEiSlJSU1GC50tJSde/eXenp6br22mu1Z8+eBstnZ2fL5XJ5H+np6c1pJgAAOIPZjDGmKSu63W5NnDhRJ06c0HvvvRewXE5Ojvbv368LL7xQRUVFevzxx7Vp0ybt2bNHXbt29buOv09G0tPTVVRUJKfT2ZTmAgCAVlZcXCyXy9Xo+3eTw8gdd9yht956S++9917AUOFPVVWV+vTpo8mTJ+uhhx4Kap1gdwYAAJw5gn3/Duk3Ix6zZ8/Wm2++qU2bNoUURCQpKipKAwcO1KefftqUqgEAwFkmpN+MGGM0e/ZsrVy5UuvXr1dGRkbIFdbU1GjXrl1KS0sLeV0AAHD2CemTkVmzZmnZsmVatWqVEhISlJ+fL0lyuVyKjY2VJE2ZMkVdunRRdna2JOnBBx/U8OHDdf755+vEiRNasGCBDh48qB/84Adh3hUAANAWhRRGFi5cKEkaPXq0z/LFixdr2rRpkqQvvvhCdvvXH7gcP35cM2bMUH5+vtq3b69BgwZp8+bNyszMbF7LAQDAWaHJP2BtTfyAFQCAtifY92/+Ng0AALAUYQQAAFiKMAIAACxFGAEAAJYijAAAAEsRRgAAgKUIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWIowAgAALEUYAQAAliKMAAAASxFGAACApQgjAADAUoQRAABgKcIIAACwFGEEAABYijACAAAsRRgBAACWIowAAABLEUYAAIClCCMAAMBShBEAAGApwggAALAUYQQAAFiKMAIAACxFGAEAAJYijAAAAEsRRgAAgKUIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWIowAgAALEUYAQAAliKMAAAASxFGAACApQgjAADAUoQRAABgKcIIAACwFGEEAABYijACAAAsFWl1A6xS4zba8tlRvftpof55qEgnq6pVWW0UHWFTRbVbVTVuGRk5IiPliLTLEWmXzWbTqeoaxURGqFNCjDq3j1FibLROnKzUV8dPyhijo2VVio22K9UZq4vSE3W0rEJ7vyrWf46flCPSrg7tonWsvEoxUTbZbHZ1jI/W4eJTOlpWqcOlFYqNtCs6MkKV1TUqr6qRTTbFRvkukzm9D3a7XZ3io9U+LkrHyqtUWHJKMpLNZlNc9Ok2dox3yGY7Xd4YoyOllTpZVa2qGinV6VCyM0bxjkjt+s8JHSmrkDFGMVFRSkmIlmw2GWOUX3TKp+5A9Xp46j9dt82nbytrjByRdsVERahDu2gdKa3Q0fJKJTgi9Y2UBCXERGn3l1+PR0xUhLokxig2OkKfFpbLmBq1j4uWkeq1yx9PWzvEO9QxweHt68KSU7Lp637qlBCj1ESHSk5Wq6DolPKKTnq3bbed3kZSu9N9crKiWkby9pcjMtLbzoSYKLklHSmpUKeE032f4IhSfvEpdWkfq+EZHeR2G72y45D25hXrZFWN4qJ8+6qqRkpJOL2Px8oqdaSsUp3aBdffdrtdsdF2JSfEyBnjW68k5Xx+RF8eP+ldL8XlUFF5lfbllehwWYU6tTu9n431r81mUztHpC5ISVCcI0L/zi9VYekp776oVv9ER9Sfu3W3FRtllyMq0mduHC07PVcrqtyqrK7RyWp3vb7yvFb7WImJjvL23/HyKpVWVKlTfIx3m55j2DP/jpRVSJI6tvPdbrXbyBkbpct7J0uS1v2rUCUVVbogOUHxMZE6XFKp8ooq71yovY2KGre6uL6eD4eLT8lI9eZOdESEz7nGc4x45lM7R6QKiyuUX3yq3nnIEWEPeHw5Iu3eMai7b5XV9ct45nF0hE1V7tPnho4JDpWdqtYnBSWSjDrFf30+McbocEmFDpeeUnllw/MjPub0PuQVnVRVjVuyfd2e2ufT1MTTc/Hf+aUqqaisN2aOiNPt9dTpGW9HVKTf87ZnmWfu1D23es6Vnm3UPtfsLyjztuH0fP56f09WudUuOlK9U53K7OzU8ZOV+ucXJ+r1o6fu2vPeU5+nHZ45neyMVf8uLrVvd/r95Mtj5T7nas/5WP+dQ6ozT+MdEUqMjdLxk9UqrahSx3YOb1+drPJ/3Hj6KiYqSmmuGA3N6KCpI3ooOtKazyhsxpgAp/EzR3FxsVwul4qKiuR0Opu9vTW78/TzV3fpRHlVGFoHAEDbZ7NJMy/N0JyrM8O2zWDfv0OKQNnZ2RoyZIgSEhKUnJysSZMmad++fY2ut2LFCvXu3VsxMTHq37+/Vq9eHUq1YbVmd55uX7qDIAIAQC3GSM9vylX26r2tXndIYWTjxo2aNWuWtmzZorVr16qqqkpXXXWVysrKAq6zefNmTZ48Wbfeeqs++ugjTZo0SZMmTdLu3bub3fhQ1biN5r2+p9XrBQCgrfj9u7mqrHa3ap3N+prm8OHDSk5O1saNGzVy5Ei/ZW644QaVlZXpzTff9C4bPny4LrroIi1atMjvOhUVFaqoqPA+Ly4uVnp6erO/psn57Kgm/35Lk9cHAOBccP+EPrr10vOavZ0W+ZqmrqKiIklSUlJSwDI5OTkaM2aMz7KxY8cqJycn4DrZ2dlyuVzeR3p6enOa6VVYcios2wEA4Gx28Fh5q9bX5DDidrt1991365vf/Kb69esXsFx+fr5SUlJ8lqWkpCg/Pz/gOnPmzFFRUZH3cejQoaY200dyQkxYtgMAwNmse1Jcq9bX5Et7Z82apd27d+u9994LZ3skSQ6HQw6HI+zbHZqRpFSnQ/nFFY0XBgDgHGS3Sbdk9WjdOpuy0uzZs/Xmm2/qnXfeUdeuXRssm5qaqoKCAp9lBQUFSk1NbUrVzRJht2nexL6tXi8AAG3FjEszWv1+IyHVZozR7NmztXLlSq1fv14ZGRmNrpOVlaV169b5LFu7dq2ysrJCa2mYjOuXpkU3X6zEuChL6gcA4Exks0m3jQzvfUaCFdLXNLNmzdKyZcu0atUqJSQkeH/34XK5FBsbK0maMmWKunTpouzsbEnSXXfdpVGjRuk3v/mNJkyYoOXLl2vbtm164YUXwrwrwRvXL01XZqZyB1buwModWLkDK3dg5Q6s3IG1rd2B1eZ5V6tj8eLFmjZtmiRp9OjR6tGjh5YsWeJ9fcWKFbrvvvt04MAB9erVS4899piuvvrqoBsZ7juwAgCAlhfs+/c5eTt4AADQ8lrlPiMAAADNRRgBAACWIowAAABLEUYAAIClCCMAAMBShBEAAGApwggAALAUYQQAAFiKMAIAACxFGAEAAJYijAAAAEsRRgAAgKUIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWIowAgAALEUYAQAAliKMAAAASxFGAACApQgjAADAUoQRAABgKcIIAACwFGEEAABYijACAAAsRRgBAACWIowAAABLEUYAAIClCCMAAMBShBEAAGApwggAALAUYQQAAFiKMAIAACxFGAEAAJYijAAAAEsRRgAAgKUIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWIowAgAALEUYAQAAliKMAAAASxFGAACApQgjAADAUiGHkU2bNumaa65R586dZbPZ9NprrzVYfsOGDbLZbPUe+fn5TW0zAAA4i4QcRsrKyjRgwAA999xzIa23b98+5eXleR/JycmhVg0AAM5CkaGuMH78eI0fPz7kipKTk5WYmBhU2YqKClVUVHifFxcXh1wfAABoG1rtNyMXXXSR0tLSdOWVV+r9999vsGx2drZcLpf3kZ6e3kqtBAAAra3Fw0haWpoWLVqkV155Ra+88orS09M1evRo7dixI+A6c+bMUVFRkfdx6NChlm4mAACwSMhf04Tqggsu0AUXXOB9PmLECH322Wd68skn9dJLL/ldx+FwyOFwtHTTAADAGcCSS3uHDh2qTz/91IqqAQDAGcaSMLJz506lpaVZUTUAADjDhPw1TWlpqc+nGrm5udq5c6eSkpLUrVs3zZkzR19++aX+9Kc/SZKeeuopZWRkqG/fvjp16pT+8Ic/aP369fr73/8evr0AAABtVshhZNu2bbrsssu8z++55x5J0tSpU7VkyRLl5eXpiy++8L5eWVmpn/zkJ/ryyy8VFxenCy+8UP/4xz98tgEAAM5dNmOMsboRjSkuLpbL5VJRUZGcTqfVzQEAAEEI9v2bv00DAAAsRRgBAACWIowAAABLEUYAAIClCCMAAMBShBEAAGApwggAALAUYQQAAFiKMAIAACxFGAEAAJYijAAAAEsRRgAAgKUIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWIowAgAALEUYAQAAliKMAAAASxFGAACApQgjAADAUoQRAABgKcIIAACwFGEEAABYijACAAAsRRgBAACWIowAAABLEUYAAIClCCMAAMBShBEAAGApwggAALAUYQQAAFiKMAIAACxFGAEAAJYijAAAAEsRRgAAgKUIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWIowAgAALEUYAQAAliKMAAAAS0Va3YAzQY3b6MPcYyosOaXkhBgNzUiSJO+yju0ckk06Ulrh/Xdh8SkdK6tUUrxDqc7T60TYbd7tbd5/RK989B+VV9ZoSI8kTR3RQ9GRoWc/f23z1BPsOoO6t9f2g8cD7l+g7Qaqu7E2BfP6ls+OKufzI5JsyurZQUN6JGlr7jGfZcPP6xBwHELti/yikwHHq7FynjbkF53UkdIKnThZJVuANtbu3y2fHdX7nx3WVydOqUv7WI3o2VHDz+vQaD/7G6/G9tOjstqtl3IO6OCxcqW3j1XvVKeOlFY0uO/BjlvdsnXHMBzj1VL90lC7h/RI8m63bpubWmcobQ+234MpF2hcah+3jR0LgfosmLkcSntrv97YXGnsHB3MfG2sbO1jp3tSnG4c1l07Dh4POMdD7ceG2hWObYXKyrr9sRljTKvXGqLi4mK5XC4VFRXJ6XSGddtrdudp/ht7lVd0yrssMS5KknSivCro7aS5YjT3mkxJ0j1/+VjllTU+r9ts0sxLMzTn6sxmtc1Tz7h+aUGvY7dJ7lqj7G//6m43UN0TB6Tp9Y/zArapsTav2Z2nn7+6K6i+jYuOUHSkPWDZpvRFsG32aGwu+GtjYlyUKqvd9eaA57VHr+/fYD/XHa/G9tMje/Ve/f7dXJ91/fG3vVDmWqAxbO541a0jXP3SWLttNinQWbApdYbSdklB9Xsw4xNo/xLjonTD4K71jttg9qmh47XuXG6sD4I95oIpG8w5LNi2SMEfOw3N8abMx2DOTy2hNesO9v075DCyadMmLViwQNu3b1deXp5WrlypSZMmNbjOhg0bdM8992jPnj1KT0/Xfffdp2nTpgVdZ0uFkTW783TH0h1qzTR228jgAkmgtnny6sKbL/Z70DV1f2pvV1JI2/GsO3Nkhl7YlBuwzTNHZuj5TblNaF3D9Ta1L2wK3OaWtiiEfm5oPz2yV+8NqW9ttbYXylxbsztPty/dEXQ9jW3Pn2DncbDb82yzqe0Opc5Q2h6oTN06ghkfSc3av9rzwSPYPlvkZ72G2hvMMRdK2brr1J2vjfXdR18cD9t5yV8/+hPs+SmYbYWqtesO9v075O8NysrKNGDAAD333HNBlc/NzdWECRN02WWXaefOnbr77rv1gx/8QG+//XaoVYdVjdto/ht7W/1N6Pfv5qqy2t1gmYba5lk2/429qqkV45u7P5715r2+R/NeD2075r+P37/r/6Thef2FMAYRz3alpvdFQ21uaaH0c6D99Kisduv374bet/Pf2KvKanfQc63GbTTv9T0h1xNoe/6EMo+D2Z5nm81pd7B1NqXtjdURzPjMe32P5q5q/v7V3qdQ+qzueg21N9hjLpSytdep3Z5gzqNzV+1u0rHTkGDmY7DzpLFthcrKuhsTchgZP368Hn74YV133XVBlV+0aJEyMjL0m9/8Rn369NHs2bP17W9/W08++WTAdSoqKlRcXOzzCLcPc48F/IiwJbmN9FLOgQbLNNY2Iymv6JQ+zD0W9DrBMJLyiyuUX9y07TQ2b1tiWje3L1rxWPMRaj/720+Pl3IOhLwfnu29lHMg6Ln2Ye4x5RdXhFZRA9vzJ9R53Nj2PNtsbruDqTOc55RQxie/uEIFJeEdl1D6rO56jfVBKHO1qfPaM18b67uCksqwngOCnY/BzJNgthUqK+tuTItfTZOTk6MxY8b4LBs7dqxycnICrpOdnS2Xy+V9pKenh71dhSWtH0Q8Dh4rb/D1YNtWu5yV+3MmOFf6wt++NTafGhLsuoUlp8Lar4G21dQ6GlqvpeZD3e22RD3NGdum8OxDqPvS1PVaSrjna1Pqb8pr4Sgfzm21Zh+2eBjJz89XSkqKz7KUlBQVFxfr5MmTfteZM2eOioqKvI9Dhw6FvV3JCTFh32awuifFNfh6sG2rXc7K/TkTnCt94W/fGptPDQl23eSEmLD2a6BtNbWOhtZrqflQd7stUU9zxrYpPPsQ6r40db2WEu752pT6m/JaOMqHc1ut2Ydn5H1GHA6HnE6nzyPchmYkKc0Vo9a+gMluk27J6tFgmcbaZtPpXzx7Lm8LZp1g2CSlOk9f3tWU7dhtanC9lujrhvoiGBZcwSYp9H72t58et2T1CHk/PNu7JatH0HNtaEaSUp2O0CpqYHv+hDqPG9ueZ5vNbXcwdYbznBLK+KQ6HUpJCO+4hNJndddrrA8aO080taxUf7421ncpCdFhPQcEOx+DOT8Fs61QWVl3Y1o8jKSmpqqgoMBnWUFBgZxOp2JjY1u6+oAi7DbvpXWt+X4049KMRu830lDbPM/nXpPpcy14c/fHs868iX01b2Jo27H99zHj0oyAbfZcuRJOjfVFY+33tNmKPBJKPwfaT4/oSLu370Mx95pMRUfag55rEXab5k3sG3I9gbbnTyjzOJjtebbZnHYHW2dT2u6vbO06ghmfeRP7av61zd+/2vsUSp/VXa+h9jZ0nmhq2drr1G5PMOfR+df2a9Kx05Bg5mMw56dgthUqK+tuTIuHkaysLK1bt85n2dq1a5WVldXSVTdqXL80Lbz5YqXWSYqJcVHe69iDleaK0aKbL9aimy9WXHREvddttuAv622obamumICXXAVap+588rd/tbcbaDtprhjdNjKjXrL2rDvn6swG2zzn6kwtuvnioPu2XXREg2WD6YtA/wtIq9PmQOUamwv+2pgYF+V3DkhS+7go76WQwY5XQ/vpMefqTN02MiOo/+Wl1dleKHNtXL+0gGPYnPGqLZz9Eky7bQ30Wah1htJ2z/misX4PZnwa2r/2cVF+j1uPuvOh9r40dLzWnsvB9EFj54lQyjZ2Dgu2LeP6pYV07DQ0xwP1oz/Bnp9a4j4jVtbdkJDvM1JaWqpPP/1UkjRw4EA98cQTuuyyy5SUlKRu3bppzpw5+vLLL/WnP/1J0ulLe/v166dZs2bp+9//vtavX68f/ehH+tvf/qaxY8cGVWdL3vRM4g6s3IGVO7AGM251y3IH1vC0nTuwcgfWs/kOrC1207MNGzbosssuq7d86tSpWrJkiaZNm6YDBw5ow4YNPuv8+Mc/1t69e9W1a1fdf//9Z8RNzwAAQMtpsTBiBcIIAABtT4vdgRUAACCcCCMAAMBShBEAAGApwggAALAUYQQAAFiKMAIAACxFGAEAAJYijAAAAEsRRgAAgKUIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWIowAgAALEUYAQAAliKMAAAASxFGAACApQgjAADAUoQRAABgKcIIAACwFGEEAABYijACAAAsRRgBAACWIowAAABLEUYAAIClCCMAAMBShBEAAGApwggAALAUYQQAAFiKMAIAACxFGAEAAJYijAAAAEsRRgAAgKUIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWIowAgAALEUYAQAAliKMAAAASxFGAACApQgjAADAUoQRAABgKcIIAACwFGEEAABYqklh5LnnnlOPHj0UExOjYcOG6cMPPwxYdsmSJbLZbD6PmJiYJjcYAACcXUIOIy+//LLuuecezZ07Vzt27NCAAQM0duxYFRYWBlzH6XQqLy/P+zh48GCzGg0AAM4eIYeRJ554QjNmzND06dOVmZmpRYsWKS4uTi+++GLAdWw2m1JTU72PlJSUBuuoqKhQcXGxzwMAAJydQgojlZWV2r59u8aMGfP1Bux2jRkzRjk5OQHXKy0tVffu3ZWenq5rr71We/bsabCe7OxsuVwu7yM9PT2UZgIAgDYkpDBy5MgR1dTU1PtkIyUlRfn5+X7XueCCC/Tiiy9q1apVWrp0qdxut0aMGKH//Oc/AeuZM2eOioqKvI9Dhw6F0kwAANCGRLZ0BVlZWcrKyvI+HzFihPr06aPnn39eDz30kN91HA6HHA5HSzcNAACcAUL6ZKRjx46KiIhQQUGBz/KCggKlpqYGtY2oqCgNHDhQn376aShVAwCAs1RIYSQ6OlqDBg3SunXrvMvcbrfWrVvn8+lHQ2pqarRr1y6lpaWF1lIAAHBWCvlrmnvuuUdTp07V4MGDNXToUD311FMqKyvT9OnTJUlTpkxRly5dlJ2dLUl68MEHNXz4cJ1//vk6ceKEFixYoIMHD+oHP/hBePcEAAC0SSGHkRtuuEGHDx/WAw88oPz8fF100UVas2aN90etX3zxhez2rz9wOX78uGbMmKH8/Hy1b99egwYN0ubNm5WZmRm+vQAAAG2WzRhjrG5EY4qLi+VyuVRUVCSn02l1cwAAQBCCff/mb9MAAABLEUYAAIClCCMAAMBShBEAAGApwggAALAUYQQAAFiKMAIAACxFGAEAAJYijAAAAEsRRgAAgKUIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWIowAgAALEUYAQAAliKMAAAASxFGAACApQgjAADAUoQRAABgKcIIAACwFGEEAABYijACAAAsRRgBAACWIowAAABLEUYAAIClCCMAAMBShBEAAGApwggAALAUYQQAAFiKMAIAACxFGAEAAJYijAAAAEsRRgAAgKUIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWIowAgAALEUYAQAAliKMAAAASxFGAACApQgjAADAUpFWN8BKNW6jD3OPqbDklJITYjSoe3ttP3jc+3xoRpIkect0bOeQbFJh8SkdKa3QsfJK5Z04pbTEGCXGRqv4VJVq3Ealp6pls9nULSlWvVOdOlJaUa98UpxDiXFR+ud/TkiyqUeHON04rLt2HjrhU3+E3Raw/ZXVbr2Uc0AHj5Wre1KcbsnqoejIr/Nljdtoy2dHlfP5EbmN1D4uWkntonWivFKJcdE6VvZ1m7q0j9XwjA6y223KP3FSO2u1y992a/ebv3Z6yuQXndSxstP1nSivVFK8Q6lO33Xq7oenH/KLTupIaYVOnKySTTYNy0iS3W5TYfEpHSvzv61AY+xpR+11JGnLZ0f1/meH9dV/+2BEz44afl4Hn+0F2t/ay5Nio/VJQYlyj5bqcHGFOiU4FGG3aWB6e6U4Y1Rd49YrOw7pX/klstmkPqkufXtQVw07r4N3ztWeX7Xb6m9e1m2fZ5z1336SpA9yj6rabVR8skqFxRU6WVmtDvEO2f67qjFGR8uqFOeI0NAeHXTz8K/7Pdj+9dfXwc5ff2NU+zjxNx6NjWfd15LjHXIbo5zPj/iM8ZAeST596q+Pa9xG/7s5V1sPHFe76AhNuqiLJGnlzi9VVlGtTgkOJcZGy2737XO3kVyxUfXOB7WPJX99Vbv9hSWn9K+8EpVVVCvFGaOL0hNVdLLKZ588ddU+ruuOWd25kdWzg4af18Fbl7/6vzperh2HjquwuFLxjghdf3FXjTi/Y4Pb83f81z33dEzwbXvtuVp7fIZndPD2pWod90dKKwLOf3/n6GDmcKD5VHs+eLZZu/5Ac62xuhsb94beJ9xGkoxcMdGS7es+7Rh3+txz6Ljv+bP23N6ae6zeWNQ9bkI9bsPNZowxrV5riIqLi+VyuVRUVCSn0xmWba7Znaf5b+xVXtEp7zK7Tf8d8NMS46IkSSfKq8JSZ6jSXDGae02mxvVLq/da9uq9+v27uT7ttdukGZdmaM7VmVqzO08/f3VXWNped7t1+61uO/2VCbRvH31xvN5+hCpQPzXUjsS4KFVWu1VeWeP3tUev769x/dIC7u/EAWl6/eO8BvcxGDZJje163XlZe3/DOc6BNDQPPYKZF8GuV5dnPCQ1OJ5S8MeqzSaZOsdO7T6Oi47wOzeay26TruiTrN1fFvvsR7jPNZ45+vK2/9TbZlx0hKIj7T7LG6u/XXSEbh7eze/2ah8vklp8Ttad/43Nn7rreDS0bt35UFuoY+WpW6o/f1vjPaahc4y/+oM5bkMR7Pt3k8LIc889pwULFig/P18DBgzQM888o6FDhwYsv2LFCt1///06cOCAevXqpV//+te6+uqrg64v3GFkze483bF0R6NvAlbzZNOFN1/sMzGyV+/V85tyA653ZWay1u4tDHt7rsxM1j/2Ftbrt9rtlGRJ39rk20/hGOPbRmbohU25Z9w88fT3zJEZDc6DcNdZdx56BOrrQPO3sfXQNi367/F/+9IdLVpP7fkfyvFZew4z9wJr7LgNVYuFkZdffllTpkzRokWLNGzYMD311FNasWKF9u3bp+Tk5HrlN2/erJEjRyo7O1vf+ta3tGzZMv3617/Wjh071K9fv7DuTDBq3EaX/Hp9s/9H21psklJdMXrvZ5crwm5TZbVbve9/q1mfJLQEm6QUp0OSTfnFrd+3tftJUljGuKH/HZ0JgvlUJZx11Z6HHo0dT01dD21PqtMhY6SCkopWqS/U49MzFzfee5lGLXiHudeAQMdtUwT7/h3yD1ifeOIJzZgxQ9OnT1dmZqYWLVqkuLg4vfjii37LP/300xo3bpzuvfde9enTRw899JAuvvhiPfvsswHrqKioUHFxsc8jXD7MPdamJqGRlFd0Sh/mHpMkvZRz4Ix8gzSS8osrLAkinvo9/RSuMT4T+7m21mxe3Xno0VhfN3U9tD35xRWtFkSk0I9Pz1x8KecAc68RgY7blhRSGKmsrNT27ds1ZsyYrzdgt2vMmDHKycnxu05OTo5PeUkaO3ZswPKSlJ2dLZfL5X2kp6eH0swGFZa0zUnoaffBY+UWt+TMVlhyqs2OcVtQt2+D7eumrgeEG+fQ4LXmcRpSGDly5IhqamqUkpLiszwlJUX5+fl+18nPzw+pvCTNmTNHRUVF3sehQ4dCaWaDkhNiwrat1uRpd/ekOItbcmZLTohps2PcFtTt22D7uqnrAeHGOTR4rXmcnpH3GXE4HHI6nT6PcBmakaQ0V4ya9y1Y67Hp9K+bPZdg3ZLVQxZcdeXTnkDLU52nLxezQu1+8oxxc9ltgff3TNCabas7Dz0aO54aWw9nj1SnQykJjlarL9Tj0zMXb8nqwdxrRKDjtiWFFEY6duyoiIgIFRQU+CwvKChQamqq33VSU1NDKt/SIuw272VWZ/IbjfR1++Zek+n9EVF0pF0zLs1ocL0rM+v/kDgcPNut22+e5/Mm9tW8iZmW9aunnzxj3Nx2ePr5TJsntv8+Zo5seB6EW+156NHQ8eRv/tZd70zrWzTdvIl9Nf/avi1ej2f+N+X4nHtNpqIj7ZbNvbYw3xs6bltSSGEkOjpagwYN0rp167zL3G631q1bp6ysLL/rZGVl+ZSXpLVr1wYs3xrG9UvTwpsvVmqddFy33xPjorzXYVsh1RXj9/KqOVdn6raRGfXaa7edvhz191OGaNHNF4et7bW366/farfT07eN/c8jzRWjRTdf7Hc/QpXmp58aa0diXJTioiP8vtY+LkqLbr5Yc67O9Lu/aa4Y3TYyIyz/uwpm1+v2j6e/51ydGdZxDsRf/9YW6HgKNH/rrtdYP3rGY1Ej4xlKP9j8HDu1BZobzWW3nQ71dfcj3Ocazxz1t8120RH1ljdWfztHRMDtecbHc/y39JysPf/9zTt/6s7hxuZeQ+ekUMfKc65b5KetrfEe09A5xl/9jR23LaVJl/ZOnTpVzz//vIYOHaqnnnpKf/nLX/TJJ58oJSVFU6ZMUZcuXZSdnS3p9KW9o0aN0qOPPqoJEyZo+fLl+tWvfmXZpb21cQdW7sDKHVi5Ayt3YOUOrNyBteXuwNqiNz179tlnvTc9u+iii/Tb3/5Ww4YNkySNHj1aPXr00JIlS7zlV6xYofvuu89707PHHnvM0pueAQCAlteiYaS1EUYAAGh7WuymZwAAAOFEGAEAAJYijAAAAEsRRgAAgKUIIwAAwFKEEQAAYCnCCAAAsBRhBAAAWCrS6gYEw3NftuLiYotbAgAAguV5327s/qptIoyUlJRIktLT0y1uCQAACFVJSYlcLlfA19vE7eDdbre++uorJSQkyFb3z202Q3FxsdLT03Xo0CFuM38GYVzOPIzJmYcxOTMxLr6MMSopKVHnzp1ltwf+ZUib+GTEbrera9euLbZ9p9PJpDkDMS5nHsbkzMOYnJkYl6819ImIBz9gBQAAliKMAAAAS53TYcThcGju3LlyOBxWNwW1MC5nHsbkzMOYnJkYl6ZpEz9gBQAAZ69z+pMRAABgPcIIAACwFGEEAABYijACAAAsRRgBAACWOqfDyHPPPacePXooJiZGw4YN04cffmh1k85K2dnZGjJkiBISEpScnKxJkyZp3759PmVOnTqlWbNmqUOHDoqPj9f/+3//TwUFBT5lvvjiC02YMEFxcXFKTk7Wvffeq+rq6tbclbPWo48+KpvNprvvvtu7jDGxxpdffqmbb75ZHTp0UGxsrPr3769t27Z5XzfG6IEHHlBaWppiY2M1ZswY7d+/32cbx44d00033SSn06nExETdeuutKi0tbe1dOSvU1NTo/vvvV0ZGhmJjY9WzZ0899NBDPn/4jTEJA3OOWr58uYmOjjYvvvii2bNnj5kxY4ZJTEw0BQUFVjftrDN27FizePFis3v3brNz505z9dVXm27dupnS0lJvmdtvv92kp6ebdevWmW3btpnhw4ebESNGeF+vrq42/fr1M2PGjDEfffSRWb16tenYsaOZM2eOFbt0Vvnwww9Njx49zIUXXmjuuusu73LGpPUdO3bMdO/e3UybNs188MEH5vPPPzdvv/22+fTTT71lHn30UeNyucxrr71mPv74YzNx4kSTkZFhTp486S0zbtw4M2DAALNlyxbz7rvvmvPPP99MnjzZil1q8x555BHToUMH8+abb5rc3FyzYsUKEx8fb55++mlvGcak+c7ZMDJ06FAza9Ys7/OamhrTuXNnk52dbWGrzg2FhYVGktm4caMxxpgTJ06YqKgos2LFCm+Zf/3rX0aSycnJMcYYs3r1amO3201+fr63zMKFC43T6TQVFRWtuwNnkZKSEtOrVy+zdu1aM2rUKG8YYUys8bOf/cxccsklAV93u90mNTXVLFiwwLvsxIkTxuFwmP/7v/8zxhizd+9eI8ls3brVW+att94yNpvNfPnlly3X+LPUhAkTzPe//32fZddff7256aabjDGMSbick1/TVFZWavv27RozZox3md1u15gxY5STk2Nhy84NRUVFkqSkpCRJ0vbt21VVVeUzHr1791a3bt2845GTk6P+/fsrJSXFW2bs2LEqLi7Wnj17WrH1Z5dZs2ZpwoQJPn0vMSZWef311zV48GB95zvfUXJysgYOHKjf//733tdzc3OVn5/vMy4ul0vDhg3zGZfExEQNHjzYW2bMmDGy2+364IMPWm9nzhIjRozQunXr9O9//1uS9PHHH+u9997T+PHjJTEm4dIm/mpvuB05ckQ1NTU+J1FJSklJ0SeffGJRq84Nbrdbd999t775zW+qX79+kqT8/HxFR0crMTHRp2xKSory8/O9ZfyNl+c1hG758uXasWOHtm7dWu81xsQan3/+uRYuXKh77rlHv/jFL7R161b96Ec/UnR0tKZOnertV3/9XntckpOTfV6PjIxUUlIS49IEP//5z1VcXKzevXsrIiJCNTU1euSRR3TTTTdJEmMSJudkGIF1Zs2apd27d+u9996zuinntEOHDumuu+7S2rVrFRMTY3Vz8F9ut1uDBw/Wr371K0nSwIEDtXv3bi1atEhTp061uHXnpr/85S/685//rGXLlqlv377auXOn7r77bnXu3JkxCaNz8muajh07KiIiot6VAQUFBUpNTbWoVWe/2bNn680339Q777yjrl27epenpqaqsrJSJ06c8ClfezxSU1P9jpfnNYRm+/btKiws1MUXX6zIyEhFRkZq48aN+u1vf6vIyEilpKQwJhZIS0tTZmamz7I+ffroiy++kPR1vzZ07kpNTVVhYaHP69XV1Tp27Bjj0gT33nuvfv7zn+t73/ue+vfvr1tuuUU//vGPlZ2dLYkxCZdzMoxER0dr0KBBWrdunXeZ2+3WunXrlJWVZWHLzk7GGM2ePVsrV67U+vXrlZGR4fP6oEGDFBUV5TMe+/bt0xdffOEdj6ysLO3atcvngF67dq2cTme9kzcad8UVV2jXrl3auXOn9zF48GDddNNN3n8zJq3vm9/8Zr3L3v/973+re/fukqSMjAylpqb6jEtxcbE++OADn3E5ceKEtm/f7i2zfv16ud1uDRs2rBX24uxSXl4uu933rTIiIkJut1sSYxI2Vv+C1irLly83DofDLFmyxOzdu9fMnDnTJCYm+lwZgPC44447jMvlMhs2bDB5eXneR3l5ubfM7bffbrp162bWr19vtm3bZrKyskxWVpb3dc9lpFdddZXZuXOnWbNmjenUqROXkYZR7atpjGFMrPDhhx+ayMhI88gjj5j9+/ebP//5zyYuLs4sXbrUW+bRRx81iYmJZtWqVeaf//ynufbaa/1eRjpw4EDzwQcfmPfee8/06tWLy0ibaOrUqaZLly7eS3tfffVV07FjR/PTn/7UW4Yxab5zNowYY8wzzzxjunXrZqKjo83QoUPNli1brG7SWUmS38fixYu9ZU6ePGnuvPNO0759exMXF2euu+46k5eX57OdAwcOmPHjx5vY2FjTsWNH85Of/MRUVVW18t6cveqGEcbEGm+88Ybp16+fcTgcpnfv3uaFF17wed3tdpv777/fpKSkGIfDYa644gqzb98+nzJHjx41kydPNvHx8cbpdJrp06ebkpKS1tyNs0ZxcbG56667TLdu3UxMTIw577zzzC9/+Uufy9cZk+azGVPrNnIAAACt7Jz8zQgAADhzEEYAAIClCCMAAMBShBEAAGApwggAALAUYQQAAFiKMAIAACxFGAEAAJYijAAAAEsRRgAAgKUIIwAAwFL/H2Gc5kXq/GGHAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import LabelEncoder\n",
        "LE=LabelEncoder()\n"
      ],
      "metadata": {
        "id": "RWhK4p6ZW5ku"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "source": [
        "for col in df.select_dtypes(include='object').columns:\n",
        "    df[col] = LE.fit_transform(df[col])"
      ],
      "cell_type": "code",
      "metadata": {
        "id": "4fvRGCgHXZ4H"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "8Io2c0_BW4c_",
        "outputId": "68626b66-a9b0-445a-93dc-a3582f69a032"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     PassengerId  Survived  Pclass  Name  Sex   Age  SibSp  Parch  Ticket  \\\n",
              "0              1         0       3   108    1  22.0      1      0     523   \n",
              "1              2         1       1   190    0  38.0      1      0     596   \n",
              "2              3         1       3   353    0  26.0      0      0     669   \n",
              "3              4         1       1   272    0  35.0      1      0      49   \n",
              "4              5         0       3    15    1  35.0      0      0     472   \n",
              "..           ...       ...     ...   ...  ...   ...    ...    ...     ...   \n",
              "886          887         0       2   548    1  27.0      0      0     101   \n",
              "887          888         1       1   303    0  19.0      0      0      14   \n",
              "888          889         0       3   413    0   NaN      1      2     675   \n",
              "889          890         1       1    81    1  26.0      0      0       8   \n",
              "890          891         0       3   220    1  32.0      0      0     466   \n",
              "\n",
              "        Fare  Cabin  Embarked  \n",
              "0     7.2500    147         2  \n",
              "1    71.2833     81         0  \n",
              "2     7.9250    147         2  \n",
              "3    53.1000     55         2  \n",
              "4     8.0500    147         2  \n",
              "..       ...    ...       ...  \n",
              "886  13.0000    147         2  \n",
              "887  30.0000     30         2  \n",
              "888  23.4500    147         2  \n",
              "889  30.0000     60         0  \n",
              "890   7.7500    147         1  \n",
              "\n",
              "[891 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-27292810-19a2-4729-940a-e81f9ab18036\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Age</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Parch</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>108</td>\n",
              "      <td>1</td>\n",
              "      <td>22.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>523</td>\n",
              "      <td>7.2500</td>\n",
              "      <td>147</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>190</td>\n",
              "      <td>0</td>\n",
              "      <td>38.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>596</td>\n",
              "      <td>71.2833</td>\n",
              "      <td>81</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>353</td>\n",
              "      <td>0</td>\n",
              "      <td>26.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>669</td>\n",
              "      <td>7.9250</td>\n",
              "      <td>147</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>272</td>\n",
              "      <td>0</td>\n",
              "      <td>35.0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>49</td>\n",
              "      <td>53.1000</td>\n",
              "      <td>55</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>35.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>472</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>147</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>886</th>\n",
              "      <td>887</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>548</td>\n",
              "      <td>1</td>\n",
              "      <td>27.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>101</td>\n",
              "      <td>13.0000</td>\n",
              "      <td>147</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>887</th>\n",
              "      <td>888</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>303</td>\n",
              "      <td>0</td>\n",
              "      <td>19.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>30.0000</td>\n",
              "      <td>30</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>888</th>\n",
              "      <td>889</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>413</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>675</td>\n",
              "      <td>23.4500</td>\n",
              "      <td>147</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>889</th>\n",
              "      <td>890</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>81</td>\n",
              "      <td>1</td>\n",
              "      <td>26.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>30.0000</td>\n",
              "      <td>60</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>890</th>\n",
              "      <td>891</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>220</td>\n",
              "      <td>1</td>\n",
              "      <td>32.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>466</td>\n",
              "      <td>7.7500</td>\n",
              "      <td>147</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>891 rows × 12 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-27292810-19a2-4729-940a-e81f9ab18036')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-27292810-19a2-4729-940a-e81f9ab18036 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-27292810-19a2-4729-940a-e81f9ab18036');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-eb02e73a-bd57-4eb7-aec3-5589070999dd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eb02e73a-bd57-4eb7-aec3-5589070999dd')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-eb02e73a-bd57-4eb7-aec3-5589070999dd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_3eeada34-b372-48bc-8d42-6024a0e6b4af\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_3eeada34-b372-48bc-8d42-6024a0e6b4af button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 257,\n        \"min\": 1,\n        \"max\": 891,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          710,\n          440,\n          841\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 257,\n        \"min\": 0,\n        \"max\": 890,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          561,\n          447\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.526497332334042,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          0.75,\n          22.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200,\n        \"min\": 0,\n        \"max\": 680,\n        \"num_unique_values\": 681,\n        \"samples\": [\n          62,\n          159\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.6934285971809,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 36,\n        \"min\": 0,\n        \"max\": 147,\n        \"num_unique_values\": 148,\n        \"samples\": [\n          15,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "SS=StandardScaler()\n",
        "SS_X=SS.fit_transform(df)\n",
        "SS_X = pd.DataFrame(SS_X, columns=df.columns)\n",
        "SS_X.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "yFh9lCgrXglH",
        "outputId": "3d6d3054-1a0c-4d27-9799-a19b1ae72710"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   PassengerId  Survived    Pclass      Name       Sex       Age     SibSp  \\\n",
              "0    -1.730108 -0.789272  0.827377 -1.310217  0.737695 -0.530377  0.432793   \n",
              "1    -1.726220  1.266990 -1.566107 -0.991410 -1.355574  0.571831  0.432793   \n",
              "2    -1.722332  1.266990  0.827377 -0.357685 -1.355574 -0.254825 -0.474545   \n",
              "3    -1.718444  1.266990 -1.566107 -0.672604 -1.355574  0.365167  0.432793   \n",
              "4    -1.714556 -0.789272  0.827377 -1.671790  0.737695  0.365167 -0.474545   \n",
              "\n",
              "      Parch    Ticket      Fare     Cabin  Embarked  \n",
              "0 -0.473674  0.918966 -0.502445  0.451502  0.581114  \n",
              "1 -0.473674  1.282625  0.786845 -1.381627 -1.938460  \n",
              "2 -0.473674  1.646283 -0.488854  0.451502  0.581114  \n",
              "3 -0.473674 -1.442322  0.420730 -2.103768  0.581114  \n",
              "4 -0.473674  0.664904 -0.486337  0.451502  0.581114  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4397bdce-0182-4f53-97f0-830159bc97ea\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Age</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Parch</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-1.730108</td>\n",
              "      <td>-0.789272</td>\n",
              "      <td>0.827377</td>\n",
              "      <td>-1.310217</td>\n",
              "      <td>0.737695</td>\n",
              "      <td>-0.530377</td>\n",
              "      <td>0.432793</td>\n",
              "      <td>-0.473674</td>\n",
              "      <td>0.918966</td>\n",
              "      <td>-0.502445</td>\n",
              "      <td>0.451502</td>\n",
              "      <td>0.581114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-1.726220</td>\n",
              "      <td>1.266990</td>\n",
              "      <td>-1.566107</td>\n",
              "      <td>-0.991410</td>\n",
              "      <td>-1.355574</td>\n",
              "      <td>0.571831</td>\n",
              "      <td>0.432793</td>\n",
              "      <td>-0.473674</td>\n",
              "      <td>1.282625</td>\n",
              "      <td>0.786845</td>\n",
              "      <td>-1.381627</td>\n",
              "      <td>-1.938460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-1.722332</td>\n",
              "      <td>1.266990</td>\n",
              "      <td>0.827377</td>\n",
              "      <td>-0.357685</td>\n",
              "      <td>-1.355574</td>\n",
              "      <td>-0.254825</td>\n",
              "      <td>-0.474545</td>\n",
              "      <td>-0.473674</td>\n",
              "      <td>1.646283</td>\n",
              "      <td>-0.488854</td>\n",
              "      <td>0.451502</td>\n",
              "      <td>0.581114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-1.718444</td>\n",
              "      <td>1.266990</td>\n",
              "      <td>-1.566107</td>\n",
              "      <td>-0.672604</td>\n",
              "      <td>-1.355574</td>\n",
              "      <td>0.365167</td>\n",
              "      <td>0.432793</td>\n",
              "      <td>-0.473674</td>\n",
              "      <td>-1.442322</td>\n",
              "      <td>0.420730</td>\n",
              "      <td>-2.103768</td>\n",
              "      <td>0.581114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-1.714556</td>\n",
              "      <td>-0.789272</td>\n",
              "      <td>0.827377</td>\n",
              "      <td>-1.671790</td>\n",
              "      <td>0.737695</td>\n",
              "      <td>0.365167</td>\n",
              "      <td>-0.474545</td>\n",
              "      <td>-0.473674</td>\n",
              "      <td>0.664904</td>\n",
              "      <td>-0.486337</td>\n",
              "      <td>0.451502</td>\n",
              "      <td>0.581114</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4397bdce-0182-4f53-97f0-830159bc97ea')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4397bdce-0182-4f53-97f0-830159bc97ea button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4397bdce-0182-4f53-97f0-830159bc97ea');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-708928f6-9f6a-46ad-b840-63cb087dc0f6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-708928f6-9f6a-46ad-b840-63cb087dc0f6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-708928f6-9f6a-46ad-b840-63cb087dc0f6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "SS_X",
              "summary": "{\n  \"name\": \"SS_X\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005616400330457,\n        \"min\": -1.730107956920867,\n        \"max\": 1.730107956920867,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          1.0264011250047391,\n          -0.02332729829556225,\n          1.5357138044578482\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005616400330455,\n        \"min\": -0.7892723355548015,\n        \"max\": 1.266989801811655,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.266989801811655,\n          -0.7892723355548015\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005616400330457,\n        \"min\": -1.5661069258891576,\n        \"max\": 0.8273772438659699,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.8273772438659699,\n          -1.5661069258891576\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005616400330457,\n        \"min\": -1.730107956920867,\n        \"max\": 1.730107956920867,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          0.45099443371420356,\n          0.0077757660985207505\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005616400330457,\n        \"min\": -1.3555735383351195,\n        \"max\": 0.7376951317802901,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -1.3555735383351195,\n          0.7376951317802901\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.000701016559981,\n        \"min\": -2.0169791879680417,\n        \"max\": 3.4651260350566906,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          -1.9942461555026214,\n          -0.5303766406838785\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005616400330457,\n        \"min\": -0.47454519624983954,\n        \"max\": 6.784163299176891,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.4327933656785018,\n          -0.47454519624983954\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005616400330457,\n        \"min\": -0.4736736092984604,\n        \"max\": 6.974147318082627,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          -0.4736736092984604,\n          0.7676298785983874\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005616400330457,\n        \"min\": -1.6864209223899624,\n        \"max\": 1.7010806389905098,\n        \"num_unique_values\": 681,\n        \"samples\": [\n          -1.3775604859111545,\n          -0.8943433514201167\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005616400330457,\n        \"min\": -0.6484216535389205,\n        \"max\": 9.667166525013505,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          -0.42207354059350805,\n          0.395813560675251\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005616400330457,\n        \"min\": -3.631375658335014,\n        \"max\": 0.45150219356806304,\n        \"num_unique_values\": 148,\n        \"samples\": [\n          -3.214755469365312,\n          -3.5480516205410733\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0005616400330457,\n        \"min\": -1.9384603796304183,\n        \"max\": 1.8409011045067867,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -1.9384603796304183,\n          1.8409011045067867\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "logreg = LogisticRegression()\n"
      ],
      "metadata": {
        "id": "6kEJQ_YGZ5Q4"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# model fitting\n",
        "logreg.fit(x,y)\n",
        "# Bo\n",
        "print(\"Intercept value: \",logreg.intercept_)\n",
        "# B1\n",
        "print(\"coeffcient value: \",logreg.coef_)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pKO-HAZWoRLT",
        "outputId": "f5460c1c-e136-4e6c-d020-3db11caf9b25"
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Intercept value:  [-9.44578293e-05 -3.90338221e-04 -2.07493190e-03  4.80532624e-03\n",
            "  1.35803492e-04  8.10360450e-05 -1.07913504e-04 -9.92940211e-04\n",
            "  8.56742122e-04  7.26585936e-05 -3.21103375e-03  8.57383854e-03\n",
            " -2.51401789e-03  1.83596406e-03 -3.12116931e-03  1.44438154e-03\n",
            " -1.90244779e-03 -2.90536289e-03 -2.68019128e-03  6.67553031e-04\n",
            "  2.67160557e-03  6.11046553e-03  4.22749863e-04 -1.17860412e-03\n",
            " -1.01952924e-03  1.68965992e-03  3.06602236e-03  1.16474607e-05\n",
            " -4.23860864e-04 -2.67550303e-03 -3.71612751e-03 -2.99549621e-03\n",
            "  2.04723672e-03 -3.70710442e-03 -2.11507372e-03  6.13448826e-04\n",
            "  7.35734185e-04  3.04786488e-05 -2.62771297e-03 -5.75411075e-06\n",
            "  4.34189102e-06 -2.39751748e-03  2.50913320e-04 -2.02314362e-03\n",
            "  2.57527877e-03 -3.09998237e-03 -5.91328669e-04 -2.74304927e-04\n",
            " -1.43812445e-03  1.39789220e-03 -5.52857096e-04 -1.69921975e-03\n",
            " -9.62989488e-04  2.43329660e-03 -3.63898339e-04 -2.80275983e-03\n",
            " -2.56080706e-03 -1.29422382e-04 -3.71362757e-03 -7.18876927e-04\n",
            " -1.50649289e-03  2.80354991e-03  5.58451764e-04 -1.96666314e-03\n",
            " -3.44779801e-03  1.77526525e-04 -1.86038876e-03 -1.21696194e-03\n",
            "  2.94624005e-03  1.09240781e-03 -1.01842860e-03 -7.28520314e-04\n",
            " -1.70248272e-03  3.38155317e-03  4.99077763e-03  6.47678795e-05\n",
            " -2.26624837e-03 -1.13070716e-03  3.91782342e-03  7.65763287e-04\n",
            " -2.66734000e-03 -1.68877478e-03  3.72841816e-04  4.45050763e-03\n",
            " -1.71763840e-03  2.77167841e-03 -2.06990965e-03 -3.77312192e-03\n",
            " -1.03442194e-04  2.53344885e-03  2.49137243e-03  1.91238123e-03\n",
            " -1.64719000e-03 -4.20443752e-04  8.62478528e-04 -2.33243990e-03\n",
            " -8.65745877e-04 -1.00185378e-03  3.30961497e-03  1.35682012e-03\n",
            " -1.29714117e-03 -1.22527593e-03 -3.00840810e-03 -5.35226916e-04\n",
            "  2.10563317e-03 -1.59777710e-04 -1.46636588e-03  1.46107998e-04\n",
            " -1.50696861e-03 -1.05570456e-03 -5.00451047e-04 -2.88117329e-03\n",
            "  2.50383255e-03 -3.97033349e-04  4.37880491e-03 -3.38191233e-03\n",
            "  3.66774700e-04 -2.40117244e-03 -3.52444748e-04  2.11582180e-03\n",
            " -1.64941318e-03 -1.66168050e-03 -1.99554018e-04 -2.33848763e-03\n",
            " -3.32281697e-03  1.51807567e-05 -8.39782806e-04 -1.40210109e-03\n",
            " -5.19755109e-04  1.91500837e-03  1.40220817e-03 -1.44271085e-03\n",
            " -2.44869079e-03 -2.95901156e-03 -2.96077121e-03 -3.19384773e-03\n",
            "  9.41158085e-04  4.72552187e-03 -1.63209216e-03 -5.70963107e-04\n",
            "  3.48137957e-03 -5.13113664e-04 -2.08074464e-03  9.61257636e-04\n",
            "  5.86477024e-03 -2.00201572e-03  9.83117116e-04 -2.06408791e-03\n",
            " -5.00729494e-05  4.01640295e-03 -1.12100452e-03 -1.51891164e-04\n",
            " -1.42544697e-03 -4.02263584e-03 -2.23733688e-03 -3.96849679e-03\n",
            "  8.99975567e-04 -1.66208184e-03 -1.84991285e-03 -2.76496968e-03\n",
            "  4.88419986e-04 -3.68787736e-03  1.89643906e-03  2.94368321e-03\n",
            " -5.26135553e-04  7.97951426e-04  4.78026610e-03 -2.10733662e-03\n",
            " -6.44539421e-04  2.46421417e-04 -1.89928519e-03 -1.88101370e-03\n",
            "  8.64364047e-04 -3.81620061e-03 -1.46014724e-03  7.12281036e-05\n",
            " -7.31005534e-04 -9.31665976e-04  2.30535181e-03 -1.57631532e-03\n",
            " -2.77359122e-03 -2.98997283e-03  2.00404199e-03  5.37979561e-03\n",
            "  1.04365671e-03 -3.74195514e-04 -1.22221729e-03 -1.49882026e-03\n",
            "  6.17649011e-04 -2.89421107e-03 -7.75796930e-04  3.29868839e-03\n",
            "  9.86168419e-04  2.75072347e-04 -1.80727400e-04 -2.43587788e-03\n",
            " -7.67390083e-04 -1.61797123e-03 -6.90913968e-04 -3.01461720e-03\n",
            " -2.59545353e-03 -2.80803599e-03  1.46841141e-03 -3.04178324e-03\n",
            " -8.31901094e-05 -2.11133982e-03  2.78076259e-03  3.51377904e-03\n",
            "  9.72989426e-04  8.65259569e-03 -1.27670095e-03 -6.65821660e-04\n",
            " -2.01488349e-03  2.67029173e-03 -2.02927361e-04 -7.62187044e-04\n",
            " -2.13777148e-03  1.54270999e-03  7.56673097e-03 -2.25820122e-03\n",
            " -3.90073529e-03  5.18771346e-03  2.29389014e-03 -5.96497954e-04\n",
            "  1.54225660e-03 -1.01829692e-03 -2.85144780e-03 -1.19662618e-03\n",
            "  3.27365043e-03 -7.56079940e-04  6.29284987e-04  6.70863234e-04\n",
            " -2.10647836e-03  2.01378619e-03 -1.39806876e-03 -2.22336274e-03\n",
            "  1.53671618e-03 -3.60919022e-04 -6.25489696e-04 -1.74107986e-03\n",
            " -2.97070613e-03 -8.90506718e-04 -1.97560452e-03 -2.52526136e-03\n",
            "  3.50625429e-03 -4.88046835e-04  5.03864369e-04  2.31321538e-03\n",
            "  7.82078244e-03  3.47381201e-03 -1.56585371e-03 -2.14630710e-03\n",
            " -2.45506512e-03 -1.31591587e-03 -1.97297345e-03 -2.18539982e-03\n",
            " -3.63330026e-03  6.90109940e-03 -1.55796642e-02 -1.02934555e-03\n",
            " -2.63697212e-03  2.03711059e-03 -1.90676889e-03  5.13887638e-03\n",
            " -5.83019649e-05 -2.37601075e-03 -6.00451701e-04 -1.02874641e-03\n",
            " -8.98277250e-04 -5.77040460e-04  4.94011931e-03 -3.45390953e-03\n",
            "  3.15559181e-04 -1.75985980e-03  1.06734996e-04  6.13766593e-03\n",
            "  3.51478549e-04 -3.71750613e-04 -1.88836610e-03 -2.42053121e-04\n",
            "  1.88250433e-03 -7.24379605e-04 -3.20440742e-03 -2.56013932e-04\n",
            " -1.07937574e-03 -2.37148861e-03 -3.22181658e-03 -3.45215030e-04\n",
            "  1.75934595e-03  7.48725242e-04  4.84588908e-03  8.52469209e-03\n",
            " -1.83494270e-03  1.22930199e-03 -2.51188422e-04 -1.84439070e-03\n",
            "  2.32949861e-03  7.77313149e-03 -4.86637927e-04 -4.06327867e-04\n",
            " -7.25499971e-04 -5.85073854e-04 -1.14362896e-03  2.60118383e-03\n",
            " -3.74537138e-03  7.77949022e-03  1.54244356e-03 -2.50708199e-03\n",
            " -4.94426097e-04 -6.18861873e-04  2.63594456e-03 -2.85020353e-03\n",
            "  1.17198697e-03  9.17673173e-04 -9.91907289e-04 -4.99914092e-04\n",
            "  1.45749538e-03 -7.54698186e-05 -4.95160349e-03 -2.67268960e-03\n",
            " -1.19819793e-04  1.65564332e-03 -1.69743937e-03  3.82725980e-03\n",
            " -2.81654972e-03 -4.01530722e-03 -6.98352531e-04  5.76679303e-03\n",
            "  7.31344540e-04  4.73235184e-03 -5.79286867e-04 -7.83364861e-05\n",
            " -9.42933564e-04 -2.63694002e-03 -1.19034567e-03  1.56310322e-03\n",
            " -2.24170541e-04  3.27772944e-03 -3.90054662e-05  5.69522713e-03\n",
            "  2.91642432e-04 -1.23368086e-04  3.73153013e-03 -1.30026804e-03\n",
            "  2.97452518e-03  4.38280171e-03 -1.93102127e-03  3.66471890e-04\n",
            " -4.33499204e-04  2.48202228e-03 -1.61115482e-03 -2.55316307e-03\n",
            "  2.89835096e-03  1.37232593e-03 -2.89403631e-03 -2.63051465e-03\n",
            "  6.38811561e-03  2.79995659e-03  3.48735224e-04  1.10114800e-04\n",
            " -2.08481990e-03 -4.35029673e-03  3.27954098e-03 -1.30637023e-03\n",
            " -1.21037108e-03 -1.69778308e-04 -2.67168366e-03  1.80288602e-04\n",
            "  1.64884252e-03  2.38709643e-04  2.49279313e-03 -2.75794407e-03\n",
            "  2.55903633e-03 -2.99970497e-03 -1.00511529e-03 -2.12658788e-03\n",
            " -1.14268871e-03 -6.99283237e-03  4.11388183e-03  1.69614114e-03\n",
            " -1.45489467e-03  2.40802724e-04 -4.14410625e-03  9.34442359e-04\n",
            " -1.33409903e-03 -1.18283984e-03 -7.04349847e-04  3.17648560e-03\n",
            " -2.01139708e-03 -1.94967701e-03  5.81054712e-03  4.94390287e-04\n",
            "  2.16741790e-03 -7.41361785e-04 -3.20004704e-03  3.30154772e-04\n",
            " -1.04975076e-03  3.12396449e-04 -2.65516770e-04 -2.31647030e-03\n",
            " -3.16076820e-03  2.36203216e-03 -4.15521056e-04 -2.10462675e-03\n",
            " -3.88230015e-04  2.35146828e-03 -3.00859000e-03 -1.04118952e-03\n",
            "  2.94653175e-03 -7.39337005e-04 -1.85955915e-03 -1.07213429e-04\n",
            " -6.02667072e-05  3.68033561e-03 -3.94508727e-03  2.34080630e-04\n",
            "  2.58806607e-03 -1.32690555e-03  6.46618064e-04 -2.56982639e-03\n",
            "  1.19609591e-03 -1.64349728e-04 -3.09453014e-03  2.05799910e-03\n",
            " -1.94255490e-03 -3.76508239e-03  4.05067895e-03 -7.63616542e-04\n",
            "  6.58879196e-04 -2.88744116e-03  8.63221651e-03 -2.98150681e-03\n",
            " -2.21115893e-03 -2.13372850e-03 -2.46714670e-03  6.10996016e-03\n",
            " -2.08119240e-03 -1.08330047e-03 -1.11610758e-03 -1.14521254e-03\n",
            " -1.00805262e-03  1.78683755e-03 -1.06066196e-03 -8.72214460e-04\n",
            " -4.47540309e-04  4.02596508e-03  6.53041140e-04 -1.48666721e-03\n",
            "  4.00464569e-03 -6.32058576e-04 -3.73759454e-03 -1.09938244e-04\n",
            "  6.00978401e-03  2.12291148e-03 -2.04511329e-03  6.67989395e-04\n",
            "  2.78827713e-05  2.00526643e-03 -3.46730364e-03 -1.29795758e-03\n",
            "  7.57158690e-03 -7.25436572e-04  1.35427746e-03  4.83628085e-05\n",
            " -1.42534116e-03 -1.76368126e-03  4.30117103e-03 -1.97942510e-03\n",
            " -2.08720584e-03  4.02248006e-03  1.16134368e-03  2.75590098e-03\n",
            " -3.74499314e-03 -1.35172074e-03 -2.89723232e-03  7.56725418e-03\n",
            " -1.00468170e-03  2.12937621e-03  1.72872988e-04  1.77977413e-03\n",
            " -7.10324064e-04  2.95395550e-03 -2.45165158e-03 -3.20309226e-03\n",
            "  8.49975827e-03 -7.47733359e-04  1.57849704e-03  1.68740356e-03\n",
            " -2.81174264e-03 -4.55635737e-04 -1.23715492e-04 -4.32207875e-03\n",
            "  9.20368950e-04 -8.79894222e-04 -2.87898230e-03 -2.98294985e-03\n",
            "  1.10498446e-03 -2.83910780e-03  7.70205834e-03 -2.61873545e-03\n",
            "  2.99115617e-03  1.05315862e-03 -4.07874632e-04 -6.55196366e-04\n",
            "  1.97429668e-03 -2.50468956e-03 -9.70708150e-04  5.92267171e-03\n",
            " -2.02006909e-03  6.33971236e-04  4.70927911e-04 -4.18152038e-03\n",
            " -1.50816544e-03 -3.01116171e-03  1.81882088e-03 -2.97741968e-03\n",
            " -1.31462976e-03 -2.06153008e-03  5.73542707e-03 -1.15143077e-03\n",
            " -3.88044357e-04 -3.08512375e-03  1.32878717e-03  3.83164965e-03\n",
            "  1.41930726e-03  5.12077940e-04 -3.69092641e-03 -8.92428824e-04\n",
            " -1.43495433e-03  1.85431517e-03 -7.84273538e-04 -2.12482934e-03\n",
            "  2.92871758e-03 -7.86044302e-04  2.88914737e-03 -8.82875527e-04\n",
            "  8.59987915e-03 -2.13303071e-03 -1.76034338e-03  5.75241151e-03\n",
            " -1.22304864e-03  2.06787479e-03  2.04978948e-03  2.98457587e-03\n",
            " -8.60265888e-04 -1.60271840e-03  3.06070333e-03 -2.88784769e-03\n",
            "  7.26041891e-04 -3.92479443e-04 -2.54126853e-03 -1.49994733e-03\n",
            " -3.81650914e-04  1.23079026e-03 -6.39756081e-04 -3.68334299e-03\n",
            "  5.56598434e-03 -3.09517774e-03 -1.86761522e-03 -3.24405290e-03\n",
            " -1.08551508e-03 -2.15489506e-03 -1.51848000e-04 -3.69296360e-03\n",
            " -2.55713311e-03 -7.93224714e-06 -2.31881480e-03 -1.06351894e-03\n",
            "  3.01654257e-03  1.71013386e-04 -1.65421420e-03  8.64137618e-03\n",
            " -3.23892892e-04  1.36280767e-03 -2.25378490e-03 -1.23370416e-03\n",
            "  2.73272464e-03 -2.19365392e-03  3.32952768e-03 -2.21661349e-03\n",
            "  3.81451534e-03 -3.25648574e-03  2.38512684e-03 -3.86772776e-04\n",
            " -7.79216007e-04 -1.77816827e-03  1.48224320e-03  2.42185884e-03\n",
            "  2.92731846e-03 -1.52528730e-03 -3.48192350e-03 -2.41486239e-03\n",
            " -4.67674922e-04  8.44019873e-04 -1.38833140e-03 -2.62331288e-03\n",
            "  8.70174926e-04 -1.31927692e-03  3.70945459e-03 -2.49823373e-04\n",
            "  1.76550028e-03 -2.10397008e-03  1.53180991e-03 -2.99053262e-03\n",
            "  1.09753513e-03 -1.09607415e-05  4.10485646e-04  3.41070640e-03\n",
            " -2.08392287e-03 -2.82916024e-03  1.81956592e-03 -1.78799110e-03\n",
            " -8.96734597e-04 -7.04913232e-06  8.22337748e-04  1.44762614e-03\n",
            "  2.00597833e-03 -1.30914056e-03  5.35864133e-03  2.30216930e-03\n",
            " -2.85110613e-03  1.57738640e-03  1.13578135e-04  9.29163293e-04\n",
            "  1.33170796e-04 -2.50269605e-03  8.16345625e-04  5.78136163e-04\n",
            "  1.50222603e-03 -4.09463744e-04  5.28013174e-03  7.49309928e-05\n",
            " -1.43258068e-03 -5.64671886e-04 -1.99737409e-03  3.49391332e-03\n",
            " -2.50340344e-03 -4.81359711e-04 -7.37554204e-04 -2.97124092e-03\n",
            "  3.98282373e-04 -2.45916664e-03 -1.99778831e-03  2.35577285e-03\n",
            "  4.02688963e-03 -9.50487003e-04  1.61622681e-03 -1.14933247e-03\n",
            " -4.10524418e-03 -3.11061454e-03 -2.65290978e-04  3.46341471e-03\n",
            " -6.35653657e-04 -4.04068561e-04  4.29580498e-04 -1.64956899e-03\n",
            " -1.37241169e-03  7.66775782e-04  2.69286621e-03 -9.66836141e-04\n",
            " -1.29578429e-03  4.14405391e-03  5.36031918e-04  1.72542453e-03\n",
            " -2.47602366e-03 -1.68161128e-03  4.63898867e-03 -1.14184469e-03\n",
            " -2.61424022e-04 -1.85413361e-03  2.63522754e-03  6.96826140e-05\n",
            " -1.81253742e-03 -2.90440736e-03 -2.57229979e-03  1.26050023e-03\n",
            " -1.51722945e-03 -3.14898940e-03 -8.24626006e-04 -6.31264729e-03\n",
            " -8.54190828e-04 -9.30994321e-04 -1.60003416e-03 -7.28279950e-04\n",
            "  2.10226272e-03 -2.09092535e-03 -6.07330328e-04  1.61436023e-03\n",
            "  1.17017910e-03 -8.24836019e-04  7.00953663e-03  3.30487432e-04\n",
            "  6.00254940e-04 -1.22174050e-03 -3.22424191e-03  3.48376260e-03\n",
            " -7.97042366e-05 -7.02989329e-04 -3.74589784e-03  1.18932148e-03\n",
            " -6.88816458e-04 -2.70113085e-03  3.58184240e-03  5.09829741e-04\n",
            "  9.31923537e-04  2.54125567e-05  1.19319431e-03 -2.15610598e-04\n",
            "  2.29711040e-03  1.67120732e-04 -1.44777339e-03  3.18638415e-03\n",
            " -2.08708516e-03 -8.30971457e-04  2.13212406e-03 -2.05374510e-03\n",
            " -1.09791894e-03 -2.12079926e-03 -5.86540153e-04  1.04452304e-03\n",
            "  2.11930762e-03  3.95316409e-04  2.67402078e-03  1.56320976e-03\n",
            "  4.42879083e-03 -3.92600933e-04 -9.97341152e-04 -6.29535139e-04\n",
            "  4.46105103e-03 -2.13043146e-03  2.42087247e-03  2.10200119e-03\n",
            "  1.39820687e-03  3.28217036e-03 -2.33522465e-03 -3.68580420e-03\n",
            " -2.20508718e-03 -6.12226504e-03  9.55388915e-04 -4.75315695e-04\n",
            "  3.73331940e-03  5.75901948e-03 -2.86086183e-03 -9.62766029e-04\n",
            " -3.98879171e-03 -1.82888835e-03 -1.76603039e-04 -1.46359799e-03\n",
            "  1.28816593e-03  2.58118909e-03 -2.60286051e-03 -3.92241188e-04\n",
            " -2.61331921e-03  7.91640578e-04  7.67728614e-04  2.42134400e-03\n",
            "  1.33645960e-03  3.04083386e-03 -2.83810597e-03 -1.55628724e-03\n",
            "  8.50659900e-04 -2.94701282e-03  4.06570980e-03  5.66734901e-03\n",
            "  2.11963688e-03  1.24135252e-03  5.63545684e-03 -4.72036274e-04\n",
            " -1.06102452e-03 -2.70210805e-04  5.85922099e-04  3.19079250e-04\n",
            " -2.03421780e-03  2.93905750e-03  1.45997771e-03 -2.19674332e-04\n",
            " -2.93677853e-03  8.33855699e-04 -2.60226671e-04 -1.97022799e-03\n",
            "  3.72230839e-03  7.20134643e-03  1.53535897e-03 -2.41216416e-03\n",
            " -1.29575728e-03  8.50320642e-05 -1.66250010e-03 -1.90704946e-03\n",
            " -2.72446685e-04 -7.24101182e-04  1.39894668e-03  2.78333368e-03\n",
            " -2.79084925e-03 -1.36191742e-03  1.86500747e-03 -4.65841608e-04\n",
            "  2.02628024e-03 -9.54905850e-04  1.76211367e-03 -2.61693648e-03\n",
            " -8.01280745e-04 -4.82307660e-04  6.25238323e-03 -1.90027636e-03\n",
            "  1.31083492e-03  1.07492571e-03  8.71482244e-03 -1.08008786e-03\n",
            "  3.19368142e-04  4.27255598e-03  1.90215128e-03 -1.11030562e-03\n",
            " -1.85748102e-03  2.09986859e-03 -2.92612360e-03  6.69996975e-03\n",
            " -2.09662333e-03 -2.14953281e-03 -8.10495047e-04 -1.98800289e-03\n",
            "  1.17444568e-03  6.75072540e-04 -8.81536338e-04 -4.51353154e-04\n",
            " -5.53619192e-04  5.14436748e-04  5.90712804e-04 -2.04802607e-03\n",
            " -5.79695701e-04 -2.80205053e-03 -2.80496569e-03 -1.02867736e-03\n",
            " -1.23876787e-03  1.78321938e-03  6.26402606e-03 -7.97277818e-04\n",
            " -5.97978172e-04 -2.46194311e-03  3.52974285e-03  2.20196370e-03\n",
            " -1.32976619e-03 -2.47133425e-03 -1.54077841e-03  1.06422997e-03\n",
            "  2.83553370e-03 -3.82416310e-04 -2.79948538e-03  9.37305152e-06\n",
            "  1.98084771e-03  3.15684211e-03  2.11493002e-03 -2.52726038e-03\n",
            "  3.68011395e-03 -1.38792641e-03  3.66745696e-03  1.65830315e-04\n",
            " -6.16430012e-03  3.17898902e-03  3.86673442e-03 -7.93698427e-04\n",
            "  8.29045225e-04  2.52629472e-03 -2.40263587e-03 -2.78223460e-03\n",
            "  2.76260918e-03  4.36630136e-03 -1.51208458e-03 -2.28433134e-03\n",
            " -3.27109112e-03  8.81994631e-04  1.29906600e-03  7.62648940e-03\n",
            "  1.08255908e-03 -2.67380254e-03 -4.90827610e-04  1.92855869e-04\n",
            " -1.54615646e-04 -1.18322986e-03  4.52481172e-04 -1.01123985e-03\n",
            " -1.59331791e-03 -1.48676775e-04  1.51908953e-04 -4.68890010e-04\n",
            " -3.86914878e-03 -1.90937750e-03  2.34722125e-04  5.61676104e-03\n",
            " -2.40773214e-03  8.64578666e-03  4.49721916e-04]\n",
            "coeffcient value:  [[-2.83204161e-03  4.59383950e-03 -9.99122129e-01 ... -1.68808094e-01\n",
            "   6.92016487e-02  3.23008112e-03]\n",
            " [ 4.97826938e-03 -9.66394691e-03 -8.73488276e-01 ...  2.19518424e-01\n",
            "  -3.87932409e-01 -1.21140802e-02]\n",
            " [ 6.25340016e-03 -4.51792495e-05 -5.16943804e-01 ... -2.27811136e-01\n",
            "  -1.87216301e-01 -7.05979899e-05]\n",
            " ...\n",
            " [-4.58524833e-03 -2.97540235e-04 -4.19886417e-01 ... -9.20675100e-02\n",
            "  -2.29170149e-01 -1.50232988e-04]\n",
            " [ 9.99176784e-03  5.78670822e-03 -3.14781993e-02 ...  2.50811687e-01\n",
            "   3.61850491e-01 -3.50858529e-03]\n",
            " [-3.55501939e-03  5.09251380e-03 -5.85275143e-01 ... -1.40027768e-01\n",
            "   1.44235143e-01 -5.74169144e-03]]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Y_pred = logreg.predict(x)\n",
        "Y_pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IC-xi3FOoZGT",
        "outputId": "2b26d254-fb34-415b-e94e-cf8d3c0a473e"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([  1,   2, 817,   4,   5,   6,   7,   8,   9,  10,  11, 858, 575,\n",
              "        14,  15,  16,  17, 200, 800,  20,  21,  22,  23,  24,  25,  26,\n",
              "        27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38, 334,\n",
              "       126,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,  52,\n",
              "        53,  54,  55,  56,  57,  58,  59,  60,  61, 699,  63, 643,  65,\n",
              "        66,  67,  68,  69,  70,  71,  72,  73,  74,  75, 740,  77,  78,\n",
              "        79,  80,  81,  82,  83,  84,  85,  86,  87, 745,  89,  90,  91,\n",
              "        92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103, 104,\n",
              "       105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117,\n",
              "        42, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130,\n",
              "       131, 132, 133, 134, 135, 136, 137,   4, 139, 140, 141, 142, 143,\n",
              "       144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156,\n",
              "       157, 158, 159, 160, 161, 162, 629, 164, 165, 166, 167, 168, 169,\n",
              "       170, 171,  17, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182,\n",
              "       183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 341, 195,\n",
              "       196, 197, 198, 199, 200, 356, 325, 203, 204, 205, 206, 207, 208,\n",
              "       209, 588, 785, 212, 213, 214, 215, 216, 217, 218, 338, 220, 221,\n",
              "       222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 262,\n",
              "       235, 236, 237, 238, 239, 240, 241, 613, 243, 244, 245, 246, 247,\n",
              "       248, 872, 250, 251, 252, 253, 254, 255, 256, 257, 258, 292, 260,\n",
              "       261, 262, 263, 556, 265, 266, 267, 268, 269, 270, 340, 272, 273,\n",
              "       274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286,\n",
              "       869, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299,\n",
              "       300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312,\n",
              "       313, 314, 441, 316, 601, 318, 319, 320, 284, 322, 323, 324, 325,\n",
              "       326, 327, 328, 549, 760, 331, 332, 333, 420, 335, 336, 337, 338,\n",
              "       339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351,\n",
              "       352, 353, 354, 355, 356, 357, 345,  83, 360, 361, 362, 363, 364,\n",
              "       187, 366, 367, 368, 369, 370, 371, 372, 113, 374,   8, 376, 377,\n",
              "       378, 763, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390,\n",
              "       391, 722, 393, 394, 395, 722, 397, 398, 399, 400, 401, 811, 114,\n",
              "       404, 405, 406, 407, 832, 373, 230, 411, 412, 413, 414, 415, 416,\n",
              "       417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429,\n",
              "       430, 463, 432, 433, 434, 435, 803, 437, 438, 439, 440, 441, 442,\n",
              "       443, 444, 104, 446, 447, 448, 645, 450, 451, 452, 435, 454, 455,\n",
              "       456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468,\n",
              "       469, 645, 471, 472, 451, 474, 475, 780, 477, 478, 479, 480, 481,\n",
              "       482, 483, 484, 485, 230, 487, 488, 489, 349, 452, 492, 493, 494,\n",
              "       495, 496, 497, 498, 499, 500, 164, 502, 503, 504, 505, 506, 507,\n",
              "       508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520,\n",
              "       521, 522, 523, 830, 525, 526, 527, 528, 529, 530, 531, 532, 353,\n",
              "       534, 535, 536, 766, 538, 539, 540, 541, 814, 543, 544, 545, 546,\n",
              "       547, 548, 549, 550, 551, 552, 630, 554, 555, 556, 557, 558, 559,\n",
              "       560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 276,\n",
              "       573, 791, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585,\n",
              "       586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598,\n",
              "       599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610,  14,\n",
              "       612, 613, 614, 615, 616, 617, 618, 619, 620, 241, 622, 623, 624,\n",
              "       625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 820, 636, 637,\n",
              "       802, 639, 640, 722, 642, 643, 644, 645, 646, 647, 648, 649, 650,\n",
              "       651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663,\n",
              "       664, 665, 666, 667, 668, 669, 670, 671, 672, 673,  18, 675, 676,\n",
              "       107, 678, 679, 680, 681, 682, 139,  72, 685, 686, 267, 688, 689,\n",
              "       690, 691, 692, 693, 694, 556, 696, 697, 698, 699, 700, 701, 702,\n",
              "       758, 704, 705, 706, 707, 708, 709,  66, 711, 712, 713, 714, 715,\n",
              "       522, 717, 718, 719, 720, 721, 722, 723, 724, 839, 726, 727, 728,\n",
              "       729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741,\n",
              "       485, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754,\n",
              "       755, 756, 757, 758, 759, 760, 761, 762, 763, 391, 765, 766, 767,\n",
              "       768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780,\n",
              "       781, 857, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 181,\n",
              "       794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806,\n",
              "        12, 808, 809, 839, 811, 812, 813, 851, 815, 450, 817, 818, 819,\n",
              "       820, 821, 822, 823, 824, 165, 826, 693, 828, 768, 830, 112, 832,\n",
              "       833, 834, 145, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845,\n",
              "       846, 325, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858,\n",
              "       859, 860, 861, 862, 863, 181, 865, 866, 867, 868, 869, 173, 871,\n",
              "       872, 873, 407, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884,\n",
              "       885, 886, 887, 337, 889, 858, 891])"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics  import recall_score, precision_score,f1_score"
      ],
      "metadata": {
        "id": "Em3bk6Yeo3Sy"
      },
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import confusion_matrix, accuracy_score\n",
        "CM = confusion_matrix(y,Y_pred)\n",
        "CM\n",
        "#print(\"Mean squared error:\", mse.round(2))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rA6DM-EvqFXi",
        "outputId": "d205a8ac-747b-4dc2-c45a-d0db630d11e3"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 0, 0, ..., 0, 0, 0],\n",
              "       [0, 1, 0, ..., 0, 0, 0],\n",
              "       [0, 0, 0, ..., 0, 0, 0],\n",
              "       ...,\n",
              "       [0, 0, 0, ..., 1, 0, 0],\n",
              "       [0, 0, 0, ..., 0, 0, 0],\n",
              "       [0, 0, 0, ..., 0, 0, 1]])"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "ac = accuracy_score(y,Y_pred)\n",
        "print(\"Accuracy score: \", ac.round(2))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I6YZl6xEqAk7",
        "outputId": "75bc06a4-ccb7-4545-c444-f50e36c8784f"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy score:  0.89\n"
          ]
        }
      ]
    },
    {
      "source": [
        "ac1 = recall_score(y, Y_pred, average='micro')"
      ],
      "cell_type": "code",
      "metadata": {
        "id": "MxvA7mAirZ8i"
      },
      "execution_count": 52,
      "outputs": []
    },
    {
      "source": [
        "ac1 = recall_score(y,Y_pred, average=None)"
      ],
      "cell_type": "code",
      "metadata": {
        "id": "s1Og8LKLrAMa"
      },
      "execution_count": 53,
      "outputs": []
    },
    {
      "source": [
        "ac1 = recall_score(y,Y_pred, average='macro')"
      ],
      "cell_type": "code",
      "metadata": {
        "id": "FSgK3sa8rAmb"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "source": [
        "ac1 = recall_score(y,Y_pred, average='weighted')"
      ],
      "cell_type": "code",
      "metadata": {
        "id": "LUK0b2qnrA37"
      },
      "execution_count": 55,
      "outputs": []
    },
    {
      "source": [
        "from sklearn.metrics  import recall_score, precision_score,f1_score\n",
        "\n",
        "CM = confusion_matrix(y,Y_pred)\n",
        "CM\n",
        "\n",
        "ac = accuracy_score(y,Y_pred)\n",
        "print(\"Accuracy score: \", ac.round(2))\n",
        "\n",
        "ac1 = recall_score(y,Y_pred, average=None)\n",
        "print(\"sensitivity score: \", ac1.round(2))\n",
        "\n",
        "ac2 = precision_score(y,Y_pred)\n",
        "print(\"precision score: \", ac2.round(2))\n",
        "\n",
        "ac3 = f1_score(y,Y_pred)\n",
        "print(\"F1 score: \", ac3.round(2))\n",
        "\n",
        "CM\n",
        "TN = CM[0,0]\n",
        "FP = CM[1,0]\n",
        "\n",
        "Specificity = TN/(TN+FP)\n",
        "Specificity\n",
        "print(\"Specificity score: \", Specificity.round(2))"
      ],
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "5y6rNBIyrBNT",
        "outputId": "4268fc4f-2bab-4677-c667-2de55c6cad60"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy score:  0.89\n",
            "sensitivity score:  [1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0. 1. 1. 1. 1. 0. 0. 1. 1. 1. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1.\n",
            " 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1.\n",
            " 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n",
            " 1. 0. 1. 1. 1. 1. 1. 1. 0. 0. 1. 1. 1. 1. 1. 1. 1. 0. 0. 1. 1. 1. 1. 1.\n",
            " 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1.\n",
            " 1. 0. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1. 0.\n",
            " 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n",
            " 1. 1. 0. 1. 0. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 0. 0. 1. 1. 1. 0. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 0. 1.\n",
            " 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 0. 1. 0. 1. 1. 1. 0. 1. 1. 1. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 0. 1. 1. 1. 1. 1. 0. 0. 1. 1. 1. 1. 0.\n",
            " 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1.\n",
            " 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 0. 1. 1. 1. 0. 1. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 0. 1. 1. 0. 1. 1. 1. 1.\n",
            " 1. 1. 1. 1. 1. 0. 1. 1. 1. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1.\n",
            " 1. 1. 1. 1. 0. 1. 1. 1. 0. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n",
            " 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 0. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 0. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n",
            " 1. 0. 1. 1. 0. 1. 1. 1. 1. 1. 0. 0. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 0. 1.\n",
            " 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1.\n",
            " 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.\n",
            " 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 1. 0. 1. 1. 1. 0. 1. 0.\n",
            " 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 0. 1. 0. 1. 0. 1. 1. 1. 0. 1. 1. 1. 1. 1.\n",
            " 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0.\n",
            " 1. 1. 1. 1. 1. 0. 1. 1. 1. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 0.\n",
            " 1. 0. 1.]\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "Target is multiclass but average='binary'. Please choose another average setting, one of [None, 'micro', 'macro', 'weighted'].",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-57-18dedcd983dc>\u001b[0m in \u001b[0;36m<cell line: 12>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"sensitivity score: \"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mac1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mround\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m \u001b[0mac2\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprecision_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mY_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"precision score: \"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mac2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mround\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36mprecision_score\u001b[0;34m(y_true, y_pred, labels, pos_label, average, sample_weight, zero_division)\u001b[0m\n\u001b[1;32m   1952\u001b[0m     \u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0.5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1.\u001b[0m \u001b[0;34m,\u001b[0m \u001b[0;36m1.\u001b[0m \u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1953\u001b[0m     \"\"\"\n\u001b[0;32m-> 1954\u001b[0;31m     p, _, _, _ = precision_recall_fscore_support(\n\u001b[0m\u001b[1;32m   1955\u001b[0m         \u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1956\u001b[0m         \u001b[0my_pred\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36mprecision_recall_fscore_support\u001b[0;34m(y_true, y_pred, beta, labels, pos_label, average, warn_for, sample_weight, zero_division)\u001b[0m\n\u001b[1;32m   1571\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mbeta\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1572\u001b[0m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"beta should be >=0 in the F-beta score\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1573\u001b[0;31m     \u001b[0mlabels\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_check_set_wise_labels\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maverage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mpos_label\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1574\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1575\u001b[0m     \u001b[0;31m# Calculate tp_sum, pred_sum, true_sum ###\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36m_check_set_wise_labels\u001b[0;34m(y_true, y_pred, average, labels, pos_label)\u001b[0m\n\u001b[1;32m   1389\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0my_type\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"multiclass\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1390\u001b[0m                 \u001b[0maverage_options\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mremove\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"samples\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1391\u001b[0;31m             raise ValueError(\n\u001b[0m\u001b[1;32m   1392\u001b[0m                 \u001b[0;34m\"Target is %s but average='binary'. Please \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1393\u001b[0m                 \u001b[0;34m\"choose another average setting, one of %r.\"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0my_type\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maverage_options\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: Target is multiclass but average='binary'. Please choose another average setting, one of [None, 'micro', 'macro', 'weighted']."
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"Y_prob\"] = logreg.predict_proba(x)[:,1]\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "9K_R3kdjrq6l",
        "outputId": "f7083733-a27f-4f91-e0c4-c5dacd65f9d4"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     PassengerId  Survived  Pclass  Name  Sex        Age  SibSp  Parch  \\\n",
              "0              1         0       3   108    1  22.000000      1      0   \n",
              "1              2         1       1   190    0  38.000000      1      0   \n",
              "2              3         1       3   353    0  26.000000      0      0   \n",
              "3              4         1       1   272    0  35.000000      1      0   \n",
              "4              5         0       3    15    1  35.000000      0      0   \n",
              "..           ...       ...     ...   ...  ...        ...    ...    ...   \n",
              "886          887         0       2   548    1  27.000000      0      0   \n",
              "887          888         1       1   303    0  19.000000      0      0   \n",
              "888          889         0       3   413    0  29.699118      1      2   \n",
              "889          890         1       1    81    1  26.000000      0      0   \n",
              "890          891         0       3   220    1  32.000000      0      0   \n",
              "\n",
              "     Ticket     Fare  Cabin  Embarked         Y_prob  \n",
              "0       523   7.2500    147         2   9.832429e-14  \n",
              "1       596  71.2833     81         0   9.664416e-01  \n",
              "2       669   7.9250    147         2   7.404900e-25  \n",
              "3        49  53.1000     55         2  1.904487e-146  \n",
              "4       472   8.0500    147         2   2.559273e-24  \n",
              "..      ...      ...    ...       ...            ...  \n",
              "886     101  13.0000    147         2  4.271386e-301  \n",
              "887      14  30.0000     30         2  2.166925e-194  \n",
              "888     675  23.4500    147         2   2.519871e-32  \n",
              "889       8  30.0000     60         0   8.462664e-62  \n",
              "890     466   7.7500    147         1   1.502525e-20  \n",
              "\n",
              "[891 rows x 13 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f4dd3016-8cc9-4403-b7dd-f350e708dc97\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>PassengerId</th>\n",
              "      <th>Survived</th>\n",
              "      <th>Pclass</th>\n",
              "      <th>Name</th>\n",
              "      <th>Sex</th>\n",
              "      <th>Age</th>\n",
              "      <th>SibSp</th>\n",
              "      <th>Parch</th>\n",
              "      <th>Ticket</th>\n",
              "      <th>Fare</th>\n",
              "      <th>Cabin</th>\n",
              "      <th>Embarked</th>\n",
              "      <th>Y_prob</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>108</td>\n",
              "      <td>1</td>\n",
              "      <td>22.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>523</td>\n",
              "      <td>7.2500</td>\n",
              "      <td>147</td>\n",
              "      <td>2</td>\n",
              "      <td>9.832429e-14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>190</td>\n",
              "      <td>0</td>\n",
              "      <td>38.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>596</td>\n",
              "      <td>71.2833</td>\n",
              "      <td>81</td>\n",
              "      <td>0</td>\n",
              "      <td>9.664416e-01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>353</td>\n",
              "      <td>0</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>669</td>\n",
              "      <td>7.9250</td>\n",
              "      <td>147</td>\n",
              "      <td>2</td>\n",
              "      <td>7.404900e-25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>272</td>\n",
              "      <td>0</td>\n",
              "      <td>35.000000</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>49</td>\n",
              "      <td>53.1000</td>\n",
              "      <td>55</td>\n",
              "      <td>2</td>\n",
              "      <td>1.904487e-146</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>35.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>472</td>\n",
              "      <td>8.0500</td>\n",
              "      <td>147</td>\n",
              "      <td>2</td>\n",
              "      <td>2.559273e-24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>886</th>\n",
              "      <td>887</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>548</td>\n",
              "      <td>1</td>\n",
              "      <td>27.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>101</td>\n",
              "      <td>13.0000</td>\n",
              "      <td>147</td>\n",
              "      <td>2</td>\n",
              "      <td>4.271386e-301</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>887</th>\n",
              "      <td>888</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>303</td>\n",
              "      <td>0</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>14</td>\n",
              "      <td>30.0000</td>\n",
              "      <td>30</td>\n",
              "      <td>2</td>\n",
              "      <td>2.166925e-194</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>888</th>\n",
              "      <td>889</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>413</td>\n",
              "      <td>0</td>\n",
              "      <td>29.699118</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>675</td>\n",
              "      <td>23.4500</td>\n",
              "      <td>147</td>\n",
              "      <td>2</td>\n",
              "      <td>2.519871e-32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>889</th>\n",
              "      <td>890</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>81</td>\n",
              "      <td>1</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>8</td>\n",
              "      <td>30.0000</td>\n",
              "      <td>60</td>\n",
              "      <td>0</td>\n",
              "      <td>8.462664e-62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>890</th>\n",
              "      <td>891</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>220</td>\n",
              "      <td>1</td>\n",
              "      <td>32.000000</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>466</td>\n",
              "      <td>7.7500</td>\n",
              "      <td>147</td>\n",
              "      <td>1</td>\n",
              "      <td>1.502525e-20</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>891 rows × 13 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f4dd3016-8cc9-4403-b7dd-f350e708dc97')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f4dd3016-8cc9-4403-b7dd-f350e708dc97 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f4dd3016-8cc9-4403-b7dd-f350e708dc97');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-37891e0a-3df3-4ce9-bd23-340989bddab4\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-37891e0a-3df3-4ce9-bd23-340989bddab4')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-37891e0a-3df3-4ce9-bd23-340989bddab4 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_ffca6191-5954-47b5-aa4c-473b1d2fac0c\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_ffca6191-5954-47b5-aa4c-473b1d2fac0c button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 891,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 257,\n        \"min\": 1,\n        \"max\": 891,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          710,\n          440,\n          841\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Survived\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Pclass\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 3,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          3,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 257,\n        \"min\": 0,\n        \"max\": 890,\n        \"num_unique_values\": 891,\n        \"samples\": [\n          561,\n          447\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sex\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.002015226002882,\n        \"min\": 0.42,\n        \"max\": 80.0,\n        \"num_unique_values\": 89,\n        \"samples\": [\n          59.0,\n          36.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SibSp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 8,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Parch\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 6,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ticket\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 200,\n        \"min\": 0,\n        \"max\": 680,\n        \"num_unique_values\": 681,\n        \"samples\": [\n          62,\n          159\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fare\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49.6934285971809,\n        \"min\": 0.0,\n        \"max\": 512.3292,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          11.2417,\n          51.8625\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 36,\n        \"min\": 0,\n        \"max\": 147,\n        \"num_unique_values\": 148,\n        \"samples\": [\n          15,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embarked\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Y_prob\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.032378008533109875,\n        \"min\": 0.0,\n        \"max\": 0.9664415574878273,\n        \"num_unique_values\": 782,\n        \"samples\": [\n          1.3831043652864273e-116,\n          3.6301769085130204e-13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import confusion_matrix, accuracy_score\n",
        "CM = confusion_matrix(y,Y_pred)\n",
        "CM"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FFEiEkWlr6Jk",
        "outputId": "cb5d7e61-053b-4542-a860-11a3d45488a1"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[1, 0, 0, ..., 0, 0, 0],\n",
              "       [0, 1, 0, ..., 0, 0, 0],\n",
              "       [0, 0, 0, ..., 0, 0, 0],\n",
              "       ...,\n",
              "       [0, 0, 0, ..., 1, 0, 0],\n",
              "       [0, 0, 0, ..., 0, 0, 0],\n",
              "       [0, 0, 0, ..., 0, 0, 1]])"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    }
  ]
}
